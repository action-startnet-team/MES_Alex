@*修改點 向下*@
@model MES_WATER.Models.BDP21_0000
@*修改點 向上*@
@using MES_WATER.Models;

@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string sPrgCode = ViewBag.prg_code;
    string limit_str = ViewBag.limit_str;
    Comm comm = new Comm();
    //下拉選項的來源
    List<DDLList> show_type_list = comm.Get_DDLOption("show_type");

    GetModelValidation gmv = new GetModelValidation();
    @*修改點 明細檔類別*@
    BDP21_0100 obj_D1 = new BDP21_0100();
    List<String> DisplayNameList_D1 = gmv.Get_DisplayNames<BDP21_0100>(obj_D1);
    List<ColumnInfo> ColumnInfoList = gmv.Get_ColumnInfoList<BDP21_0100>(obj_D1);
    string key_D1 = gmv.GetKey<BDP21_0100>(obj_D1);
    string key = gmv.GetKey<BDP21_0000>(new BDP21_0000());
    @*修改點 向上*@
}
@section head_plugin {
    <link rel="stylesheet" href="~/Content/assets/css/jquery-ui.min.css" />
    <link rel="stylesheet" href="~/Content/assets/css/ui.jqgrid.min.css" />
}
@Html.Partial("pPrgName")
<!-- 表單 -->
<div class="row">
    <ul class="nav nav-tabs" id="myTab">
        <li class="active">
            <a data-toggle="tab" href="#home">
                <i class="green ace-icon fa fa-home bigger-120"></i>
                主檔
            </a>
        </li>
    </ul>
    <div class="tab-content">
        <div id="home" class="tab-pane fade in active">
            @using (Html.BeginForm("Update", sPrgCode, FormMethod.Post, new { @class = "form-horizontal", id = "validation_form", role = "form" }))
            {
                <div id="errMsgSummary" class="alert alert-danger hidden">
                    <button type="button" class="close" data-dismiss="alert">
                        <i class="ace-icon fa fa-times"></i>
                    </button>
                    <strong>
                        <i class="ace-icon fa fa-times"></i>
                        系統訊息!
                    </strong>
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    <br />
                </div>
                <!-- 欄位開始 -->
                <div class="form-group">
                    @CustomHelper.Get_Label(Model, sPrgCode, "code_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                    <div class="col-md-9">
                        <div class="clearfix">
                            @Html.EditorFor(model => model.code_code, new { htmlAttributes = new { @class = " col-xs-10 col-sm-5", @readonly = "" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.code_code, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @CustomHelper.Get_Label(Model, sPrgCode, "code_name", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                    <div class="col-md-9">
                        <div class="clearfix">
                            @Html.EditorFor(model => model.code_name, new { htmlAttributes = new { @class = " col-xs-10 col-sm-5", autofocus= "" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.code_name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @CustomHelper.Get_Label(Model, sPrgCode, "cmemo", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                    <div class="col-md-9">
                        <div class="clearfix">
                            @Html.EditorFor(model => model.cmemo, new { htmlAttributes = new { @class = " col-xs-10 col-sm-5" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.cmemo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @CustomHelper.Get_Label(Model, sPrgCode, "show_type", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                    <div class="col-sm-9">
                        <div class="clearfix">
                            <select name="show_type">
                                @CustomHelper.Get_Option(@show_type_list, Model.show_type, true)
                            </select>
                        </div>
                    </div>
                </div>
                <!-- 按鈕 -->
                <div class="clearfix form-actions">
                    <div class="col-md-offset-3 col-md-9">
                        <input type="submit" value="儲存" class="btn btn-white btn-info btn-bold" />
                        &nbsp;
                        <a class="btn btn-white btn-pink btn-round" href=@Url.Action("Index", sPrgCode)>
                            <i class="ace-icon fa fa-undo "></i>
                            返回
                        </a>
                    </div>
                </div>
            }
        </div> <!-- end of home -->
    </div> <!--end of table-content -->
</div>
<br />
<!-- jqGrid begin -->
<table id="grid-table"></table>
<div id="grid-pager"></div>
<!-- jqGrid end -->
@section footer_plugin {
    @* validate? *@
    <script src="~/Scripts/assets/js/wizard.min.js"></script>
    <script src="~/Scripts/assets/js/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/assets/js/jquery-additional-methods.min.js"></script>
    <script src="~/Scripts/assets/js/bootbox.js"></script>
    <script src="~/Scripts/assets/js/jquery.maskedinput.min.js"></script>
    <script src="~/Scripts/assets/js/select2.min.js"></script>
    @* validate? *@
    <script src="~/Scripts/assets/js/bootstrap-datepicker.min.js"></script>
    <script src="~/Scripts/assets/js/jquery.jqGrid.min.js"></script>
    <script src="~/Scripts/assets/js/grid.locale-cn.js"></script>
}
@section footer_script{
    <script type="text/javascript">
        jQuery(function ($) {
            $("#validation_form").bind("invalid-form.validate", function () {
                $("#errMsgSummary").removeClass('hidden');
            });
            $('#validation_form').submit(function () {
                if ($(this).valid()) {
                    $('form input:submit').attr('disabled', 'disabled');
                } else {
                    $('form input:submit').removeAttr('disabled')
                }
            });
        })
    </script>
}

<script type="text/javascript">

    jQuery(function ($) {
        var grid_selector = "#grid-table";
        var pager_selector = "#grid-pager";


        var parent_column = $(grid_selector).closest('[class*="col-"]');
        //resize to fit page size
        $(window).on('resize.jqGrid', function () {
            $(grid_selector).jqGrid('setGridWidth', parent_column.width());
        })

        //resize on sidebar collapse/expand
        $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
            if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                setTimeout(function () {
                    $(grid_selector).jqGrid('setGridWidth', parent_column.width());
                }, 20);
            }
        })

        @* 修改點 向下 明細檔的新增資料檢查*@
        // beforeSubmit: function 存檔時檢查的函數
        function Check_Data_D1(postdata, formid) {
            let result = null;
            $.ajax({
                async: false,
                method: 'post',
                url: '@Url.Action("Check_Data_D1", sPrgCode)',
                data: postdata,
                datatype: 'json',
                success: function (bool) {
                    if (bool) {
                        result = [true, ""]
                    } else {
                        result = [false, "欄位代碼: " + postdata.field_code + " 已存在!"]
                    }
                },
                error: function () {
                    alert("ajax連線失敗!");
                }
            })
            return result;
        }
        @* 修改點 向上 *@

        //JqGrid本體主要設定
        jQuery(grid_selector).jqGrid({
            url: "@Url.Action("Get_GridData_D1", sPrgCode)",
            mtype: "Post",
            datatype: "json",
            postData: { pTkCode: "@Model.GetType().GetProperty(key).GetValue(Model)" },  //foreign key default value
            height: 'auto',
            colNames: JSON.parse('@Html.Raw(Json.Encode(DisplayNameList_D1))'),
            colModel: [
                {
                    name: 'myac', index: '', width: 80, fixed: true, sortable: false, resize: false, search: false,
                    formatter: 'actions',
                    formatoptions: {
                        keys: true,
                        @if(limit_str.Contains("D"))
                        {
                            <text>delbutton: true,</text>
                        }else
                        {
                            <text>delbutton: false,</text>
                        }
                        @if (limit_str.Contains("M"))
                        {
                            <text>editbutton: true,</text>
                        }else
                        {
                            <text>editbutton: false,</text>
                        }
                        delOptions: {
                            recreateForm: true,
                            beforeShowForm: beforeDeleteCallback,
                            url: "@Url.Action("Delete_D1", sPrgCode)",
                            mtype: 'post',
                            delData: {
                                "pTkCode": function () {
                                    //Get data from selected row
                                    let id = jQuery(grid_selector).jqGrid('getGridParam', 'selrow');
                                    let data = jQuery(grid_selector).jqGrid('getRowData', id);
                                    return data["@key_D1"];
                                }
                            }
                        },
                    }
                },
                @foreach(var item in ColumnInfoList)
                {
                    switch(item.name)
                    {
                        case "can_delete":
                            <text>
                                { name: 'can_delete', index: 'can_delete', width: 60, sorttype: "string", hidden: true },
                            </text>
                            break;
                        case "can_update":
                            <text>
                                { name: 'can_update', index: 'can_upate', width: 60, sorttype: "string", hidden: true },
                            </text>
                            break;
                        case "is_use":
                            <text>
                                { name: 'is_use', index: 'is_use', width: 20, editable: true, edittype: "checkbox", sortable: false, editoptions: { value: "Y:N" }, unformat: aceSwitch },
                            </text>
                            break;
                        default:
                            <text>
                                {
                                    name: '@item.name', index: '@item.name', width: 40, sorttype: '@item.propertyType', editable: true,
                                    editrules: {
                                        @if (item.required)
                                            {
                                                <text>required: true,</text>
                                            }
                                        @switch (item.propertyType)
                                        {
                                            case "int":
                                                <text>integer: true,</text>
                                                break;
                                            case "decimal":
                                                <text>number: true,</text>
                                                break;
                                            default:
                                                break;
                                        }
                                        },
                                        editoptions: {
                                            @if (item.name == key_D1) {
                                                <text>readonly: true,</text>
                                            }
                                            @if (item.name == key)
                                            {
                                                <text>readonly: true,</text>
                                                <text>defaultValue: "@Model.GetType().GetProperty(key).GetValue(Model)",</text>
                                            }
                                            @if (item.maxlength > 0)
                                            {
                                                <text>maxlength: @item.maxlength,</text>
                                            }
                                            }
                                        },
                            </text>
                            break;
                    }
                }
            ],
            viewrecords: true,
            rowNum: 10,
            rowList: [10, 20, 30, 50, 100],
            pager: pager_selector,
            altRows: true,
            //toppager: true,
            multiselect: true,
            //multikey: "ctrlKey",
            multiboxonly: true,
            multiselectWidth: -6,  // hide checkbox column
            // sort
            loadonce: true,
            // not works
            //navOptions: { reloadGridOptions: { fromServer: true } },
            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    styleCheckbox(table);
                    updateActionIcons(table);
                    updatePagerIcons(table);
                    enableTooltips(table);
                }, 0);
            },
            editurl: "@Url.Action("Update_D1", sPrgCode)"
        });

        $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size

        //enable search/filter toolbar

        //switch element when editing inline
        function aceSwitch(cellvalue, options, cell) {
            setTimeout(function () {
                $(cell).find('input[type=checkbox]')
                    .addClass('ace ace-switch ace-switch-5')
                    .after('<span class="lbl"></span>');
            }, 0);
        }
        //enable datepicker
        function pickDate(cellvalue, options, cell) {
            setTimeout(function () {
                $(cell).find('input[type=text]')
                    .datepicker({ format: 'yyyy-mm-dd', autoclose: true });
            }, 0);
        }


        //navButtons
        jQuery(grid_selector).jqGrid('navGrid', pager_selector,
            { 	//navbar options
                edit: false,
                editicon: 'ace-icon fa fa-pencil blue',
                add: true,
                addicon: 'ace-icon fa fa-plus-circle purple',
                del: false,
                delicon: 'ace-icon fa fa-trash-o red',
                search: true,
                searchicon: 'ace-icon fa fa-search orange',
                refresh: true,
                refreshicon: 'ace-icon fa fa-refresh green',
                view: true,
                viewicon: 'ace-icon fa fa-search-plus grey'
            },
            {
                //edit record form
                //width: 700,
                closeAfterEdit: true,
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    style_edit_form(form);
                },
                afterSubmit: function () { $(this).jqGrid('setGridParam', { datatype: 'json' }); return [true, ""] }
            },
            {
                //new record form 明細新增記錄的form
                //width: 700,
                closeAfterAdd: true,
                recreateForm: true,
                refresh: true,
                viewPagerButtons: false,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar')
                    .wrapInner('<div class="widget-header" />')
                    style_edit_form(form)
                    $('input[name="is_use"]').attr('checked', 'checked') //預設是否使用為Y
                },
                afterShowForm: function(form) {
                    form.closest('div.ui-jqdialog').center();
                },
                beforeSubmit: Check_Data_D1, //確認唯一性
                reloadAfterSubmit: true,
                // .trigger('reloadGrid')
                afterSubmit: function () { $(this).jqGrid('setGridParam', { datatype: 'json' }); return [true, ""] },
                url: "@Url.Action("Insert_D1", sPrgCode)"
            },
            {
                // del
            },
            {
                //search form
                recreateForm: true,
                afterShowSearch: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                    style_search_form(form);
                },
                afterRedraw: function () {
                    style_search_filters($(this));
                }
                ,
                multipleSearch: true,
                /**
                multipleGroup:true,
                showQuery: true
                */
            },
            {
                //view record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                    form.closest('.ui-jqdialog').center()
                },
                
                afterSubmit: function () { $(this).jqGrid('setGridParam', { datatype: 'json' }); return [true, ""] }
            }
        )

        function style_edit_form(form) {
            //enable datepicker on "sdate" field and switches for "stock" field
            form.find('input[name=sdate]').datepicker({ format: 'yyyy-mm-dd', autoclose: true })

            form.find('input[name=stock]').addClass('ace ace-switch ace-switch-5').after('<span class="lbl"></span>');
            //don't wrap inside a label element, the checkbox value won't be submitted (POST'ed)
            //.addClass('ace ace-switch ace-switch-5').wrap('<label class="inline" />').after('<span class="lbl"></span>');
            form.find('input[name=is_use]').addClass('ace ace-switch ace-switch-5').after('<span class="lbl"></span>');

            //update buttons classes
            var buttons = form.next().find('.EditButton .fm-button');
            buttons.addClass('btn btn-sm').find('[class*="-icon"]').hide();//ui-icon, s-icon
            buttons.eq(0).addClass('btn-primary').prepend('<i class="ace-icon fa fa-check"></i>');
            buttons.eq(1).prepend('<i class="ace-icon fa fa-times"></i>')

            buttons = form.next().find('.navButton a');
            buttons.find('.ui-icon').hide();
            buttons.eq(0).append('<i class="ace-icon fa fa-chevron-left"></i>');
            buttons.eq(1).append('<i class="ace-icon fa fa-chevron-right"></i>');
        }

        function style_delete_form(form) {
            var buttons = form.next().find('.EditButton .fm-button');
            buttons.addClass('btn btn-sm btn-white btn-round').find('[class*="-icon"]').hide();//ui-icon, s-icon
            buttons.eq(0).addClass('btn-danger').prepend('<i class="ace-icon fa fa-trash-o"></i>');
            buttons.eq(1).addClass('btn-default').prepend('<i class="ace-icon fa fa-times"></i>')
        }

        function style_search_filters(form) {
            form.find('.delete-rule').val('X');
            form.find('.add-rule').addClass('btn btn-xs btn-primary');
            form.find('.add-group').addClass('btn btn-xs btn-success');
            form.find('.delete-group').addClass('btn btn-xs btn-danger');
        }
        function style_search_form(form) {
            var dialog = form.closest('.ui-jqdialog');
            var buttons = dialog.find('.EditTable')
            buttons.find('.EditButton a[id*="_reset"]').addClass('btn btn-sm btn-info').find('.ui-icon').attr('class', 'ace-icon fa fa-retweet');
            buttons.find('.EditButton a[id*="_query"]').addClass('btn btn-sm btn-inverse').find('.ui-icon').attr('class', 'ace-icon fa fa-comment-o');
            buttons.find('.EditButton a[id*="_search"]').addClass('btn btn-sm btn-purple').find('.ui-icon').attr('class', 'ace-icon fa fa-search');
        }

        function beforeDeleteCallback(e) {
            var form = $(e[0]);
            if (form.data('styled')) return false;

            form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
            style_delete_form(form);

            form.data('styled', true);

        }

        function beforeEditCallback(e) {
            var form = $(e[0]);
            form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
            style_edit_form(form);
        }



        //it causes some flicker when reloading or navigating grid
        //it may be possible to have some custom formatter to do this as the grid is being created to prevent this
        //or go back to default browser checkbox styles for the grid
        function styleCheckbox(table) {
            /**
                $(table).find('input:checkbox').addClass('ace')
                .wrap('<label />')
                .after('<span class="lbl align-top" />')


                $('.ui-jqgrid-labels th[id*="_cb"]:first-child')
                .find('input.cbox[type=checkbox]').addClass('ace')
                .wrap('<label />').after('<span class="lbl align-top" />');
            */
        }


        //unlike navButtons icons, action icons in rows seem to be hard-coded
        //you can change them like this in here if you want
        function updateActionIcons(table) {
            /**
            var replacement =
            {
                'ui-ace-icon fa fa-pencil' : 'ace-icon fa fa-pencil blue',
                'ui-ace-icon fa fa-trash-o' : 'ace-icon fa fa-trash-o red',
                'ui-icon-disk' : 'ace-icon fa fa-check green',
                'ui-icon-cancel' : 'ace-icon fa fa-times red'
            };
            $(table).find('.ui-pg-div span.ui-icon').each(function(){
                var icon = $(this);
                var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
                if($class in replacement) icon.attr('class', 'ui-icon '+replacement[$class]);
            })
            */
        }

        //replace icons with FontAwesome icons like above
        function updatePagerIcons(table) {
            var replacement =
            {
                'ui-icon-seek-first': 'ace-icon fa fa-angle-double-left bigger-140',
                'ui-icon-seek-prev': 'ace-icon fa fa-angle-left bigger-140',
                'ui-icon-seek-next': 'ace-icon fa fa-angle-right bigger-140',
                'ui-icon-seek-end': 'ace-icon fa fa-angle-double-right bigger-140'
            };
            $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {
                var icon = $(this);
                var $class = $.trim(icon.attr('class').replace('ui-icon', ''));

                if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
            })
        }

        function enableTooltips(table) {
            $('.navtable .ui-pg-button').tooltip({ container: 'body' });
            $(table).find('.ui-pg-div').tooltip({ container: 'body' });
        }

        //var selr = jQuery(grid_selector).jqGrid('getGridParam','selrow');

        $(document).one('ajaxloadstart.page', function (e) {
            $.jgrid.gridDestroy(grid_selector);
            $('.ui-jqdialog').remove();
        });
    });
</script>