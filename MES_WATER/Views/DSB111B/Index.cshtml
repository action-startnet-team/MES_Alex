@using System.Data
@using MES_WATER.Models
@{

    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string sPrgCode = ViewBag.prg_code;

    Comm comm = new Comm();


    string sSql = "SELECT mac_code ,mac_name FROM MEB15_0000 where MEB15_0000.mac_code <> '1001-M1' and MEB15_0000.mac_code <> '1001-M2' ";
    DataTable dtTmp = comm.Get_DataTable(sSql);
    List<DDLList> mac_code_list = comm.Get_DDLOption("MEB15_0000", "mac_code", "mac_name");

    string sSql_2 = "SELECT line_code ,line_name FROM MEB12_0000 where line_code <> '1001-M1' and line_code <> '1001-M2'  ";
    DataTable dtTmp_2 = comm.Get_DataTable(sSql_2);

    List<DDLList> line_code_list = comm.Get_DDLOptionBySql("SELECT line_code as field_code, line_name as field_name FROM MEB12_0000 where line_code <> '1001-M1' and line_code <> '1001-M2'");
}

<style>
    /*#oee > div span {
        margin-top:5px;
        display:inline-block;
    }*/

    .mac-container {
        display: flex;
        flex-wrap: wrap;
    }

    .mac-item {
        width: 400px;
        margin: 5px;
        border-radius: 10px;
        font-size: 20px;
        padding-top: 10px;
        padding-bottom: 15px;
        /**/
        background: #4C4C4C;
        color: #fff;
    }

    .mac-item-head {
        width: 90%;
        margin: 0 auto;
    }

        .mac-item-head .mo-div {
            float: right;
        }

    .status-div {
        margin-top: 5px;
        text-align: center;
        /* 不知道為什麼子元素在inline-block下，沒有文字的高度會多一點*/
        height: 46px;
    }

        .status-div .status {
            display: inline-block;
            width: 90%;
            border-radius: 10px;
            font-size: 24px;
            font-weight: bold;
            height: 46px;
            line-height: 46px;
            /**/
            background: #ffd800;
            color: #000;
        }

    .oee-container {
        display: flex;
        flex-wrap: wrap;
        margin-top: 5px;
    }

        .oee-container .oee-item {
            flex-basis: 44%;
            margin: 0 auto;
            margin-top: 5px;
            background: #000;
        }

            .oee-container .oee-item.pro_qty-div,
            .oee-container .oee-item.stopTime-div {
                margin-right: 5px;
            }

            .oee-container .oee-item.utilization-div,
            .oee-container .oee-item.workTime-div {
                margin-left: 5px;
            }

            .oee-container .oee-item .pro_qty-value,
            .oee-container .oee-item .utilization-value,
            .oee-container .oee-item .stop_time-value,
            .oee-container .oee-item .work_time-value {
                float: right;
            }

        .oee-container .oee-item {
            padding: 5px 10px;
        }

    /* 狀態 顏色 */
    .status-color-default {
        background-color: #808080 !important;
    }

    .status-color-run {
        background-color: #33FF00 !important;
    }

    .status-color-idle {
        background-color: #FFC107 !important;
    }

    .status-color-stop {
        background-color: #DC3545 !important;
    }
</style>


@Html.Partial("pPrgName")

<div id="custom_btns">
    <div class="clearfix">
        <div class="pull-left" style="margin-left: 10px">
            <a id="refresh" class="btn btn-white btn-success btn-bold" role="button">
                <span class="ui-icon ace-icon fa fa-refresh green"></span>
                <span class=''>更新</span>
            </a>
        </div>
        <div>
            <span style="font-size:20px ;color: #fff; padding-left:50px;">線別</span>
            <select name="lineList" id="lineList">
                @CustomHelper.Get_Option(line_code_list, "", true)
            </select>


            <span style="font-size:20px ;color: #fff; padding-left:50px;">設備清單</span>
            <select name="MacCodeList" id="MacCodeList" class="multiselect" multiple></select>
            <div class="pull-right" style="margin-left: 10px">
                <span style="font-size:15px ;color: #fff; padding-left:50px;">最後更新時間</span>
                <span style="font-size:15px ;color: #fff;" id="last_time"></span>
            </div>
        </div>

    </div>
</div>

<br>

<div id="oee">
    <div class="mac-container">
        <!--  -->
    </div>
</div>
@section footer_plugin{
    <script src="/Scripts/assets/js/bootstrap-multiselect.min.js"></script>

}
<script>
    jQuery(function ($) {
        let $macCode = $('#MacCodeList');
        $(document).ready(function (){
            Set_multiSelectItem();
            Set_MacHtml();
        })

        //-------function-even-start---------//
        $("#lineList").change(function () {
            Set_multiSelectItem();
        })

        // 點擊更新按鈕
        $('#refresh').click(function () {

            immediateUpdate();
            getdate();
        })
        //-------function-even-end---------//

        //---------function---------//
        //初始化複選格式style
        function init_multiSelect($div){
            $("select#MacCodeList").multiselect('destroy');

            $div.multiselect({
                enableFiltering: true,
                enableHTML: true,
                allSelectedText: "全選",
                numberDisplayed: 10,
                includeSelectAllOption: true,
                selectAllText: '全選',
                nonSelectedText: '---請選擇---',
                maxHeight: 450,
                buttonWidth: 150,
                buttonClass: 'btn btn-white btn-primary',
                templates: {
                    button: '<button type="button" class="multiselect dropdown-toggle" data-toggle="dropdown"><span class="multiselect-selected-text"></span> &nbsp;<b class="fa fa-caret-down"></b></button>',
                    ul: '<ul class="multiselect-container dropdown-menu"></ul>',
                    filter: '<li class="multiselect-item filter"><div class="input-group"><span class="input-group-addon"><i class="fa fa-search"></i></span><input class="form-control multiselect-search" type="text"></div></li>',
                    filterClearBtn: '<span class="input-group-btn"><button class="btn btn-default btn-white btn-grey multiselect-clear-filter" type="button"><i class="fa fa-times-circle red2"></i></button></span>',
                    li: '<li><a tabindex="0"><label style="color:black"></label></a></li>',
                    divider: '<li class="multiselect-item divider"></li>',
                    liGroup: '<li class="multiselect-item multiselect-group"><label></label></li>'
                },
            });
            //預設全選
            $("select#MacCodeList").multiselect('selectAll', false);
            $("select#MacCodeList").multiselect('updateButtonText');
            $('select#MacCodeList').on('change', function () { immediateUpdate(); });
            $('#view_wrap').change(function () {
                if ($("#view_wrap").is(":checked")) {
                    $('.mac-container').addClass("mac-container--rows");
                }
                else {
                    $('.mac-container').removeClass("mac-container--rows");
                }
                immediateUpdate();
            });
        }

        function getdate() {

            var d = new Date(); //獲取當前時間
            var year = d.getFullYear(); //獲取當前年份
            var month = d.getMonth() + 1; //獲取當前月份，注意加1
            var date = d.getDate(); //獲取當前日期
            var hour = d.getHours(); //獲取小時
            var min = d.getMinutes(); //獲取分鐘
            var sec = d.getSeconds(); //獲取秒
            var today = year + '/' + month + '/' + date +'  ' + hour + ':' + min + ':' + sec +'';
            last_time.innerHTML = today;
        }

        function Set_multiSelectItem(){
            const selectLists = $("#MacCodeList");
            let line_code = $('#lineList').val();
            selectLists.empty();
            // selectLists.append('<option value="">--請選擇--</option>');
            $.ajax({
                async: false,
                url: '@Url.Action("Init_Get_MacCodeSelectList")',
                data: {
                    'line_code': line_code
                },
                success: function(data) {
                    if (typeof (data) == 'object' && data != null ) {
                        Array.from(data).forEach(function(v,i){
                            selectLists.append('<option value="' + v.mac_code + '">' + v.mac_code + " - " + v.mac_name+'</option>');
                        });
                        init_multiSelect(selectLists);
                        $("select#MacCodeList").multiselect('refresh');
                        $('select#MacCodeList').on('change', function () { immediateUpdate(); });
                    }
                }
            });
            immediateUpdate();
        }

        let $container = $('.mac-container')
        // 初始 - 定時更新
        let currentTimer = setTimerUpdate()

        // 立刻更新並重新設置定時
        function immediateUpdate() {
            // 更新機台資料
            Set_MacHtml()

            // 清除timer
            clearTimeout(currentTimer)

            // 重設timer
            currentTimer = setTimerUpdate()
            getdate();
        }

        // 定時更新
        function setTimerUpdate() {
            let timer = Timer({
                initSeconds: 15,
                tick: 15000,
                launch: {
                    callback: function () {
                        Set_MacHtml()
                        let arr = Get_Current_MacElements()
                        update(arr)
                    }
                }
            })

            return timer
        }

        // 定時器
        function Timer(options) {
            let initSeconds = options.initSeconds // seconds // 初始總時間
            let interval = options.interval || 1  // seconds // 發動一次的間隔
            let tick = options.tick || 1000  // ms  // 每單位時間發動一次
            let launch = options.launch  // callback函數和發動時間

            launch.restTime = launch.restTime || 0  // 預設0秒callback

            let count = initSeconds
            $('#update_count').text(count)

            let timer = setInterval(function () {
                count -= interval
                if (count <= launch.restTime) {
                    if (typeof launch.callback === 'function') {
                        launch.callback()
                    }
                    count = initSeconds
                }
                $('#update_count').text(count)
            }, tick)

            return timer
        }


        // 清空畫面 + ajax抓資料 + 設置資料到畫面
        function Set_MacHtml() {
            // 清空畫面
            if ($container.length > 0) {
                $container.empty()
            }

            let order = $('#sortList').val();// 排序
            let line_code = $('#lineList').val();// 線別


            let macCodeItem = $('#MacCodeList').val();
            if (macCodeItem) {
                macCodeItem = macCodeItem.filter(x => x);  // 過濾空字串
                macCodeItem = macCodeItem.join(',');
            }
            // ajax 開始，抓資料庫的機台清單
            $.ajax({
                method: 'get',
                url: '/DSB111B/Init_Get_MacCodeList',
                data: {
                    order: order,
                    line_code: line_code,
                    Item: macCodeItem
                }
            }).done(function (json) {
                // 建立機台元素清單
                let elements = []
                json.forEach(function (item, index) {
                    var boardType = $("#board_type").val();
                    let $macItem = _getNewMacElement(item, boardType);
                    elements.push($macItem);
                })

                // ajax抓OEE資料 (by mac_code)
                // 資料抓完設置到傳入的元素
                update(elements, function (el) {
                    // 把元素設置到畫面上
                    $container.append(el);
                })
            }).fail(function () {
                console.log('ERROR 5005: 抓取機台清單失敗(Init_Get_MacCodeList)');
            })
        }

        // 創建一個新的方格，傳入機台基本資料(mac_code, mac_name)
        function _getNewMacElement(oMacData) {
            let htmlString = `@Html.Raw(Html.Action("MacItem", "DSB111B"))`
            let $newDiv = $(htmlString)
            let mac_code = oMacData.mac_code
            let mac_name = oMacData.mac_name

            $newDiv.attr('data-mac_code', mac_code)
            $newDiv.find('.mac_name').text(mac_name)
            $newDiv.find('.mac_code').text(mac_code)
            return $newDiv
        }

        // 取得畫面上的機台清單
        function Get_Current_MacElements() {
            let $mac_list = $('#oee').find('[data-mac_code]')
            let arr = Array.prototype.slice.call($mac_list)

            return arr
        }


        // 傳入element清單
        function update(aMacElements, afterEachUpdate) {
            let mac_code_list = aMacElements.map(function (item, index) {
                let mac_code = $(item).attr('data-mac_code')

                return mac_code
            })

            $.ajax({
                method: 'post',
                url: '/DSB111B/Get_OeeData',
                data: {
                    pJson: JSON.stringify(mac_code_list)
                }
            }).done(function (json) {
                $('.mac-container').html('');
                aMacElements.forEach(function (item, index) {
                    // 加入資料到element
                    let mac_code = $(item).attr('data-mac_code')

                    let oeeData = json[mac_code]

                    if (oeeData) {
                        _setMacElementText($(item), oeeData)
                    }


                    if (typeof afterEachUpdate === 'function') {
                        afterEachUpdate(item, index, aMacElements)
                    }
                    // 設置到html上
                    //$container.append($(item))  // 不加判斷也不會重複增加元素，不知道為什麼
                    //if ($container.find(item).length == 0) {
                    //    $container.append(item)
                    //}
                })

            }).fail(function () {
                alert('抓取資料失敗! ')
            })
        }

        //
        function _setMacElementText($el, data) {
            console.log()
            if (!data) {
                return
            }

            //
            let $mac_name = $el.find('.mac_name')
            let $mac_code = $el.find('.mac_code')
            let $mo_code = $el.find('.mo_code')
            let $scr_no = $el.find('.scr_no')

            let $status = $el.find('.status')

            let $pro_qty = $el.find('.pro_qty-value')
            let $utilization = $el.find('.utilization-value')
            let $stop_time = $el.find('.stop_time-value')
            let $work_time = $el.find('.work_time-value')

            // 設值
            if (data.mac_name) {
                $mac_name.val(data.mac_name) // 機台名稱
                $mac_code.val(data.mac_code)
            }
            $mo_code.text(data.mo_code)  // 製令
            $scr_no.text(data.scr_no)  // 順序

            // 狀態(中文 + 背景顏色)
            $status.attr('data-status_code', data.status)
            if (data.status) {
                console.log(data.status)
                switch (data.status.toUpperCase()) {
                    case '1':
                        $status.text('生產')
                        $status.attr('class', 'status status-color-run')
                        break;
                    case 'D':
                        $status.text('關機')
                        $status.attr('class', 'status status-color-default')
                        break;
                    case '0':
                        $status.text('閒置')
                        $status.attr('class', 'status status-color-idle')
                        break;
                    case 'E':
                        $status.text('停機')
                        $status.attr('class', 'status status-color-stop')
                        break;
                    case '2':
                        $status.text('異常中')
                        $status.attr('class', 'status status-color-stop')
                        break;
                    default:
                        $status.text('關機')
                        $status.attr('class', 'status status-color-default')
                        break;
                }
            }

            $pro_qty.text(data.pro_qty)  // 產量
            $utilization.text(data.utilization)
            $stop_time.text(data.stop_time + '分')  // 停機
            $work_time.text(data.work_time + '%')  // 工時
        }


    })
</script>


