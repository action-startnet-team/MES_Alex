@*修改點 以下*@
@model MES_WATER.Models.WMT0100
@*修改點 以上*@
@using MES_WATER.Models;
@using System.Reflection;
@using System.ComponentModel.DataAnnotations;
@using System.ComponentModel.DataAnnotations.Schema;
@{
    //主檔頁面
    ViewBag.Title = "Insert";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //公用函數庫
    Comm comm = new Comm();
    GetModelValidation gmv = new GetModelValidation();

    //公用變數
    string sPrgCode = ViewContext.RouteData.Values["controller"].ToString();
    string limit_str = comm.Get_LimitByUsrCode(User.Identity.Name, sPrgCode);
    string key = gmv.GetKey<WMT0100>(new WMT0100());

    @*修改點 向下*@
WMT0100 obj = new WMT0100();

//下拉選項的來源
List<DDLList> sto_code_list = comm.Get_DDLOption("WMB01_0000", "sto_code", "sto_name");
List<DDLList> pro_code_list = comm.Get_DDLOption("WMB06_0000", "pro_code", "pro_name");
List<DDLList> loc_code_list = comm.Get_DDLOption("WMB02_0000", "loc_code", "loc_name");
List<DDLList> ins_type_DDL = comm.Get_DDLOption("ins_type");
List<DDLList> is_print_DDL = comm.Get_DDLOption("is_print");
List<DDLList> is_use_DDL = comm.Get_DDLOption("is_use");
List<DDLList> is_error_DDL = comm.Get_DDLOption("is_error");
List<DDLList> sup_code_list = comm.Get_DDLOption("WMB10_0000", "sup_code", "sup_name");


}

@section head_plugin {
    <link rel="stylesheet" href="~/Content/assets/css/chosen.min.css" />
    <link rel="stylesheet" href="~/Content/assets/css/bootstrap-multiselect.min.css" />
    <link rel="stylesheet" href="~/Content/assets/css/jquery-ui.custom.min.css" />
    <link rel="stylesheet" href="~/Content/assets/css/bootstrap-datepicker3.min.css" />
    <link rel="stylesheet" href="~/Content/assets/css/bootstrap-timepicker.min.css" />
    <link rel="stylesheet" href="~/Content/assets/css/jquery-ui-timepicker-addon.css" />
    <link rel="stylesheet" href="assets/css/bootstrap-datetimepicker.min.css" />
}
@Html.Partial("pPrgName")
<!-- 表單 -->
<div class="row">
    <ul class="nav nav-tabs" id="myTab">
        <li class="active">
            <a data-toggle="tab" href="#home">
                <i class="green ace-icon fa fa-home bigger-120"></i>
                主檔
            </a>
        </li>
    </ul>
    <div class="tab-content">
        <div id="home" class="tab-pane fade in active">
            @using (Html.BeginForm("Insert", sPrgCode, FormMethod.Post, new { @class = "form-horizontal", id = "validation_form", role = "form" }))
            {
                <div id="errMsgSummary" class="alert alert-danger @( (ViewBag.showErrMsg ?? false ) ? "" : "hidden" )">
                    <button type="button" class="close" data-dismiss="alert">
                        <i class="ace-icon fa fa-times"></i>
                    </button>
                    <strong>
                        <i class="ace-icon fa fa-times"></i>
                        系統訊息!
                    </strong>
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    <br />
                </div>
                @*修改點 向下 輸入畫面編排*@
                <div class="row">
                    <div class="col-xs-4">
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "rel_type", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.rel_type, new { htmlAttributes = new { @class = " col-xs-12" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.rel_type, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "rel_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.rel_code, new { htmlAttributes = new { @class = " col-xs-12" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.rel_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "scr_no", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.scr_no, new { htmlAttributes = new { @class = " col-xs-12" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.scr_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "ins_type", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-sm-8 col-xs-8">
                                    <select class="chosen-select" id="ins_type" name="ins_type">
                                        @CustomHelper.Get_Option(ins_type_DDL, Model.ins_type, false)
                                    </select>
                                    @Html.ValidationMessageFor(model => model.ins_type, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "sto_date", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.sto_date, new { htmlAttributes = new { @class = " col-xs-12" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.sto_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        @*<br />
                            <div class="row">
                                <div class="col-sm-12">
                                    @CustomHelper.Get_Label(Model, sPrgCode, "sto_time", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                    <div class="col-md-8 col-xs-7">
                                        <div>
                                            @Html.EditorFor(model => model.sto_time, new { htmlAttributes = new { @class = " col-xs-12" } })
                                        </div>
                                        <div style="clear:both;"></div>
                                        @Html.ValidationMessageFor(model => model.sto_time, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>*@
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "cus_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.cus_code, new { htmlAttributes = new { @class = " col-xs-12" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.cus_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "sup_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-sm-8 col-xs-8">
                                    <select class="chosen-select" id="sup_code" name="sup_code">
                                        @CustomHelper.Get_Option(sup_code_list, Model.sup_code, true)
                                    </select>
                                    @Html.ValidationMessageFor(model => model.sup_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "sup_lot_no", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.sup_lot_no, new { htmlAttributes = new { @class = " col-xs-12" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.sup_lot_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "mft_date", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.mft_date, new { htmlAttributes = new { @class = " col-xs-12" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.mft_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "exp_date", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.exp_date, new { htmlAttributes = new { @class = " col-xs-12" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.exp_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "pro_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-sm-8 col-xs-8">
                                    <select class="chosen-select" id="pro_code" name="pro_code">
                                        @CustomHelper.Get_Option(pro_code_list, Model.pro_code, false)
                                    </select>
                                    @Html.ValidationMessageFor(model => model.pro_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "lot_no", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.lot_no, new { htmlAttributes = new { @class = " col-xs-12" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.lot_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "sto_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-sm-8 col-xs-8">
                                    <select class="chosen-select" id="sto_code" name="sto_code">
                                        @CustomHelper.Get_Option(sto_code_list, Model.sto_code, false)
                                    </select>
                                    @Html.ValidationMessageFor(model => model.sto_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "loc_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-sm-8 col-xs-8">
                                    <select class="chosen-select" name="loc_code" id="loc_code">
                                        <option value="">--請先選擇倉庫--</option>
                                    </select>
                                    @Html.ValidationMessageFor(model => model.loc_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "pro_qty", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.pro_qty, new { htmlAttributes = new { @class = " col-xs-12" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.pro_qty, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "is_print", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-sm-8 col-xs-8">
                                    <select class="chosen-select" id="is_print" name="is_print">
                                        @CustomHelper.Get_Option(is_print_DDL, Model.is_print, false)
                                    </select>
                                    @Html.ValidationMessageFor(model => model.is_print, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "is_use", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-sm-8 col-xs-8">
                                    <select class="chosen-select" id="is_use" name="is_use">
                                        @CustomHelper.Get_Option(is_use_DDL, Model.is_use, false)
                                    </select>
                                    @Html.ValidationMessageFor(model => model.is_use, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "is_error", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-sm-8 col-xs-8">
                                    <select class="chosen-select" id="is_error" name="is_error">
                                        @CustomHelper.Get_Option(is_error_DDL, Model.is_error, false)
                                    </select>
                                    @Html.ValidationMessageFor(model => model.is_error, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @*修改點 向上 輸入畫面編排*@
                <br />
                <div class="clearfix">
                    <div class="col-md-offset-5 col-md-7">
                        <input id="btnSave" type="submit" value="儲存" class="btn btn-white btn-info btn-bold" />
                        &nbsp;
                        <a class="btn btn-white btn-pink btn-round" href=@Url.Action("Index", sPrgCode)>
                            <i class="ace-icon fa fa-undo "></i>
                            返回
                        </a>

                    </div>
                </div>
            }
        </div>
    </div>
</div>



@section footer_plugin{
    <script src="~/Scripts/assets/js/wizard.min.js"></script>
    <script src="~/Scripts/assets/js/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/assets/js/jquery-additional-methods.min.js"></script>
    <script src="~/Scripts/assets/js/bootbox.js"></script>
    <script src="~/Scripts/assets/js/jquery.maskedinput.min.js"></script>
    <script src="~/Scripts/assets/js/select2.min.js"></script>
    <script src="~/Scripts/assets/js/chosen.jquery.min.js"></script>
    <script src="~/Scripts/assets/js/autosize.min.js"></script>
    <script src="~/Scripts/assets/js/bootstrap-datepicker.min.js"></script>
    <script src="~/Scripts/assets/js/bootstrap-datepicker.zh-TW.min.js"></script>
    <script src="~/Scripts/assets/js/bootstrap-timepicker.min.js"></script>
    <script src="~/Scripts/assets/js/jquery-ui-timepicker-addon.js"></script>
    <script src="~/Scripts/assets/js/bootstrap-datetimepicker.min.js"></script>

}

@section footer_script{
    <script type="text/javascript">
        jQuery(function ($) {
            $("input[name=sto_date]").datepicker({ language: 'zh-TW', format: "yyyy/mm/dd", autoclose: true }).attr('autocomplete', 'off');
            $("input[name=mft_date]").datepicker({ language: 'zh-TW', format: "yyyy/mm/dd", autoclose: true }).attr('autocomplete', 'off');
            $("input[name=exp_date]").datepicker({ language: 'zh-TW', format: "yyyy/mm/dd", autoclose: true }).attr('autocomplete', 'off');

            //$('#sto_time').timepicker({
            //    minuteStep: 1,
            //    showSeconds: true,
            //    showMeridian: false,
            //    disableFocus: true,
            //    icons: {
            //        up: 'fa fa-chevron-up',
            //        down: 'fa fa-chevron-down'
            //    }
            //}).on('focus', function () {
            //    $('#sto_time').timepicker('showWidget');
            //}).next().on(ace.click_event, function () {
            //    $(this).prev().focus();
            //});

            //儲位 (倉庫-儲位)
            $("select[name=sto_code]").change(function () {
                $.get("Get_LocName?sto_code=" + $(this).val(), function (data) {
                    $('select[name=loc_code]').empty()
                    if (data.length > 0) {
                        for (let i = 0 ; i < data.length ; i++) {
                            let loc_display = data[i].loc_code + ' - ' + data[i].loc_name
                            let option = $('<option value="' + data[i].loc_code + '">' + loc_display + '</option>')
                            $('select[name=loc_code]').append(option)
                        }
                    } else {
                        $('select[name=loc_code]').append($('<option value="">沒有儲位!</option>'))
                    }
                    $('select[name=loc_code]').trigger("chosen:updated");

                });
            })
            //Sam
            //$("#btnSave").on("click",function(){
            //    var date_val = $("input[name=sto_date]").val().replace("/", "-")
            //    $("input[name=sto_date]").val(date_val);
            //})

            @*修改點 向下 控制項輸入控制參考*@
            @*
            //編號帶名稱
            $('#cus_code').change(function () {
                $.get('Get_CusData?pCusCode=' + $('#cus_code').val() + '&pType=cus_tel1', function (data) {
                    $('#cus_tel1').val(data);
                });
                $.get('Get_CusData?pCusCode=' + $('#cus_code').val() + '&pType=cus_tel2', function (data) {
                    $('#cus_tel2').val(data);
                });
                $.get('Get_CusData?pCusCode=' + $('#cus_code').val() + '&pType=out_add', function (data) {
                    $('#out_add').val(data);
                });

   });

            // 金額鎖定 (是否能修改稅額)
            $('input[name="amt_lock"]').change(function () {
                if (this.checked) {
                    $('input[name="tax_amt"]').removeAttr('readonly')
                } else {
                    $('input[name="tax_amt"]').attr('readonly', 'readonly')
                }
            })

            // 手動修改時計算合計
            $('#pur_amt, #tax_amt').focus(function () {
                $(this).data('val', parseFloat($(this).val() == "" ? 0 : $(this).val()));
            }).change(function () {
                let prev_sum = parseFloat($('input[name=sum_amt]').val())
                let current_sum = prev_sum - $(this).data('val') + parseFloat($(this).val() == "" ? 0 : $(this).val())
                $('input[name=sum_amt]').val(current_sum)
            })

            // 廠商-連絡人
            $("select[name=sup_code]").change(function () {
                $.get("Get_AtnName?sup_code=" + $(this).val(), function (data) {
                    $('select[name=atn_name]').empty()
                    if (data.length > 0) {
                        for (let i = 0 ; i < data.length ; i++) {
                            let atn_name = data[i].per_name + '(' + data[i].ext_no + ')'
                            let option = $('<option value="' + data[i].per_name + '">' + atn_name + '</option>')
                            $('select[name=atn_name]').append(option)
                        }
                        $('input[name=per_tel]').val(data[0].per_tel)
                        $('input[name=ext_no]').val(data[0].ext_no)
                        $('input[name=per_big]').val(data[0].per_big)
                        $('input[name=per_fax]').val(data[0].per_fax)
                        $('input[name=per_email]').val(data[0].per_email)
                    } else {
                        $('select[name=atn_name]').append($('<option value="">沒有連絡人!</option>'))
                        $('input[name=per_tel]').val('')
                        $('input[name=ext_no]').val('')
                        $('input[name=per_big]').val('')
                        $('input[name=per_fax]').val('')
                        $('input[name=per_email]').val('')
                    }
                    $('select[name=atn_name]').trigger("chosen:updated");

                });
                // 付款條件
                $.get("Get_PayTerm?sup_code=" + $(this).val(), function (data) {

                    $('input[name="pay_term"]').val(data[0].pay_term)
                })
            })
            // 廠商-連絡人 預設
            if ($("select[name=sup_code]").val()) {
                $.get("Get_AtnName?sup_code=" + $("select[name=sup_code]").val(), function (data) {
                    $('select[name=atn_name]').empty()
                    if (data.length > 0) {
                        for (let i = 0 ; i < data.length ; i++) {
                            let atn_name = data[i].per_name + '(' + data[i].ext_no + ')'
                            let option = $('<option value=' + data[i].per_name + '>' + atn_name + '</option>')
                            if (atn_name.includes("@Model.atn_name")) {
                                option.attr('selected', 'selected')
                            }
                            $('select[name=atn_name]').append(option)
                        }
                    } else {
                        $('select[name=atn_name]').append($('<option value="">沒有連絡人!</option>'))
                    }
                    $('select[name=atn_name]').trigger("chosen:updated");
                });
            }

            // 連絡人-資訊
            $("select[name=atn_name]").change(function () {
                $.get("Get_AtnNameInfo",
                    {
                        sup_code: $("select[name=sup_code]").val(),
                        per_name: $(this).val()
                    },
                    function (data) {
                        if (data.length > 0) {
                            $('input[name=per_tel]').val(data[0].per_tel)
                            $('input[name=ext_no]').val(data[0].ext_no)
                            $('input[name=per_big]').val(data[0].per_big)
                            $('input[name=per_fax]').val(data[0].per_fax)
                            $('input[name=per_email]').val(data[0].per_email)
                        } else {
                            $('input[name=per_tel]').val('')
                            $('input[name=ext_no]').val('')
                            $('input[name=per_big]').val('')
                            $('input[name=per_fax]').val('')
                            $('input[name=per_email]').val('')
                        }

                    })
            })

     *@



            @*修改點 向上 控制項輸入控制參考*@


            // checkbox value ( Y/N )
            $('form').find($('input[type="checkbox"]')).each(function () {
                // default
                if ($(this).prop('checked')) {
                    // set checked value
                    $(this).val('Y')
                } else {
                    // set unchecked value
                    $(this).before($('<input type="hidden" value="N" name="' + $(this).attr('name') + '" />'))
                }
                // change state
                $(this).change(function () {
                    if (this.checked) {
                        // set checked value and remove hidden input for unchecked  value
                        $(this).val('Y')
                        $(this).prev('input[type="hidden"]').remove()
                    } else {
                        // set unchecked value
                        $(this).before($('<input type="hidden" value="N" name="' + $(this).attr('name') + '" />'))
                    }
                })
            })

            $("#validation_form").bind("invalid-form.validate", function () {
                $("#errMsgSummary").removeClass('hidden');
            });

            $('#validation_form').submit(function () {
                if ($(this).valid()) {
                    $('form input:submit').attr('disabled', 'disabled');
                } else {
                    $('form input:submit').removeAttr('disabled')
                }
            });

            // chosen select
            if (!ace.vars['touch']) {
                $('.chosen-select').chosen({ allow_single_deselect: true });
                //resize the chosen on window resize

                $(window)
                .off('resize.chosen')
                .on('resize.chosen', function () {
                    $('.chosen-select').each(function () {
                        var $this = $(this);
                        $this.next().css({ 'width': $this.parent().width() });
                    })
                }).trigger('resize.chosen');
                //resize chosen on sidebar collapse/expand
                $(document).on('settings.ace.chosen', function (e, event_name, event_val) {
                    if (event_name != 'sidebar_collapsed') return;
                    $('.chosen-select').each(function () {
                        var $this = $(this);
                        $this.next().css({ 'width': $this.parent().width() });
                    })
                });

                $('#chosen-multiple-style .btn').on('click', function (e) {
                    var target = $(this).find('input[type=radio]');
                    var which = parseInt(target.val());
                    if (which == 2) $('#form-field-select-4').addClass('tag-input-style');
                    else $('#form-field-select-4').removeClass('tag-input-style');
                });
            }


            autosize($('textarea[class*=autosize]'));
            $(document).one('ajaxloadstart.page', function (e) {
                autosize.destroy('textarea[class*=autosize]')

                $('.limiterBox,.autosizejs').remove();
                $('.daterangepicker.dropdown-menu,.colorpicker.dropdown-menu,.bootstrap-datetimepicker-widget.dropdown-menu').remove();
            });



        })
    </script>
}
