@using MES_WATER.Models;
@using MES_WATER.Controllers;
@{
    ViewBag.Title = "Title";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string sPrgCode = ViewContext.RouteData.Values["controller"].ToString();
    string sAction = ViewContext.RouteData.Values["action"].ToString();

    EPB030AController CT = new EPB030AController();
    EPB050AController CT2 = new EPB050AController();
    GetModelValidation gmv = new GetModelValidation();
    Comm comm = new Comm();
    GetData GD = new GetData();
    DynamicTable DT = new DynamicTable();
    Review RV = new Review();
    ReportReview RpRv = new ReportReview();

    string pubFieldTable = CT.pubFieldTable;
    string pubPKCode = CT.pubPKCode();

    string ScrNo = ViewBag.ScrNo; //生成碼
    string sEpbCode = ViewBag.Key; // 表單代號

    string sReportGroupCode = ScrNo;

    string sReportCode = comm.Get_QueryData("RSS03_0000", ScrNo, "report_group_code", "report_code");
    string sReportName = comm.Get_QueryData("RSS02_0000", sReportCode, "report_code", "report_name");

    //可能會有很多，取第一個
    string sReviewCode = comm.Get_Data("EPB05_0000", sReportGroupCode, "report_group_code", "review_code").Split(',')[0];

    //明細欄位
    string Grid_Field = DT.Get_SqlField(CT2.Sql_EPB050A(ScrNo));

}

@section head_plugin {
    <link rel="stylesheet" href="~/Content/assets/css/chosen.min.css" />
    <link rel="stylesheet" href="/Content/assets/css/bootstrap-datepicker3.min.css" />
    <link rel="stylesheet" href="/Content/assets/css/bootstrap-multiselect.min.css" />
    <link rel="stylesheet" href="/Content/assets/css/jquery-ui.min.css" />
    <link rel="stylesheet" href="~/Content/assets/css/ui.jqgrid.css" />
}




<h3 class="blue">電子表單審核作業</h3>
<hr />

<form id="validation-form" method="post" action="@Url.Action(sAction, sPrgCode)" class="form-horizontal" role="form">

    <div>
        <label class="col-sm-2 control-label no-padding-right">
            報表代號
        </label>
        <div class="col-sm-2">
            <input type="text" class="check col-sm-12" id="report_code" name="report_code" value="@sReportCode" readonly />
        </div>
        <label class="col-sm-1 control-label no-padding-right">
            報表名稱
        </label>
        <div class="col-sm-2">
            <input type="text" class="check col-sm-12" id="report_name" name="report_name" value="@sReportName" readonly />
        </div>
    </div>

    <div style="clear:both"></div>
    <div class="row">
        <ul class="nav nav-tabs" id="myTab">
            <li class="active">
                <a data-toggle="tab" href="#home">
                    <i class="green ace-icon fa fa-home bigger-120"></i>
                    主檔
                </a>
            </li>
        </ul>
        <div class="tab-content">
            <div id="home" class="tab-pane fade in active">              

                <div class="form-group">
                    <label class="col-sm-3 control-label no-padding-right" for="form-field-1">                        
                        查看報表
                    </label>
                    <div class="col-sm-3">
                        <button class="btn btn-white btn-success btn-round bigger-150" name="ExportToExcel" value="@ScrNo">
                            <i class="ace-icon fa fa-eye "></i>
                        點此查看報表
                        </button>
                    </div>
                </div>
               

                <div class="form-group">
                    <label class="col-sm-3 control-label no-padding-right" for="form-field-1">
                        審核意見
                    </label>

                    <div class="col-sm-3">
                        <div class="clearfix">
                            <textarea class="form-control" id="" name="review_memo" maxlength="100"></textarea>
                        </div>
                    </div>

                </div>

                <div style="clear:both"></div>

                <div class="col-lg-offset-3">



                    @*可以決行的人才能用審核結案*@
                    @{
                        string IsManager = "";
                        string IsFinalReview = "";
                        if (!RpRv.Chk_IsManager(sReviewCode, User.Identity.Name))
                        {
                            IsManager = "display:none";
                        }

                        @*審核設定的最後一個人只能選取決行(唯讀)
                        if (RV.Get_UsrIsFinalLevel(sReviewCode, User.Identity.Name))
                        {
                            IsFinalReview = "checked disabled";
                        }*@
                    }
                    

                    <label style="@IsManager" class="Review">
                        <input id="Review_F" name="Review_F" type="checkbox" class="ace input-lg" @IsFinalReview>
                        <span class="lbl btn btn-white btn-warning btn-round">決行</span>
                    </label>
                    &nbsp; &nbsp;


                    <a class="btn btn-white btn-info btn-round Review" id="Review_Y">
                        <i class="ace-icon fa fa-flag "></i>
                        審核通過
                    </a>
                    &nbsp;&nbsp;

                    @if (RpRv.Chk_CanReturn(sReviewCode, User.Identity.Name))
                    {
                        <a class="btn btn-white btn-success btn-round Review" id="Review_N">
                            <i class="ace-icon fa fa-ban "></i>
                            審核退回
                        </a>
                    }

                    &nbsp;&nbsp;
                    <a class="btn btn-white btn-danger btn-round" id="back" href="/EPB050A/Index">
                        <i class="ace-icon fa fa-undo "></i>
                        返回
                    </a>

                </div>
            </div>
        </div>
    </div>
    <br />
    <div style="clear:both"></div>

    @{
        //此電子表單資料的打單人員
        //string sUsrCode = comm.Get_QueryData("EPB03_0000", ScrNo, "field_value", "usr_code");
        string sUsrCode = comm.Get_QueryData("RSS03_0000", ScrNo, "report_group_code", "usr_code");
        string sUsrName = comm.Get_QueryData("BDP08_0000", sUsrCode, "usr_code", "usr_name");

        //審核設定作業的審核人員(字串陣列)
        string sRvUsrArray = RpRv.Get_ReviewUser(sReviewCode);
    }

    @*進度圖*@
    <div class="">
        <span class="label label-xlg label-@RpRv.Get_ReviewClass(ScrNo,sUsrCode) arrowed-right">
            <b>@GD.Get_DutName(sUsrCode)</b>
            @sUsrCode - @sUsrName
            <a class='white'><i class='ace-icon glyphicon glyphicon-time'></i>@RpRv.Get_IsReviewDatetime(ScrNo, sUsrCode)</a>
        </span>

        @if (!string.IsNullOrEmpty(sRvUsrArray))
        {
            for (int i = 0; i < sRvUsrArray.Split(',').Length; i++)
            {
                //審核人員
                string sRvUsrCode = sRvUsrArray.Split(',')[i];

                <span class="label label-xlg label-@RpRv.Get_ReviewClass(ScrNo,sRvUsrCode) arrowed-right arrowed-in">
                    <b>@GD.Get_DutName(sRvUsrCode)</b>
                    @sRvUsrCode - @comm.Get_QueryData("BDP08_0000", sRvUsrCode, "usr_code", "usr_name")
                    <a class='white'><i class='ace-icon glyphicon glyphicon-time'></i>@RpRv.Get_IsReviewDatetime(ScrNo, sRvUsrCode)</a>
                </span>
            }
        }
    </div>


    <div style="clear:both"></div>
    <br />
    <div class="col-sm-12">
        <table id="grid-table"></table>
        <div id="grid-pager"></div>
    </div>

</form>



@section footer_plugin{
    <script src="~/Scripts/assets/js/autosize.min.js"></script>
    <script src="~/Scripts/assets/js/chosen.jquery.min.js"></script>
    <script src="/Scripts/assets/js/jquery-ui.min.js"></script>
    <script src="/Scripts/assets/js/bootstrap-datepicker.min.js"></script>
    <script src="/Scripts/assets/js/bootstrap-datepicker.zh-TW.min.js"></script>
    <script src="/Scripts/assets/js/bootstrap-multiselect.min.js"></script>
    <script src="~/Scripts/assets/js/jquery.jqGrid.min.js"></script>
    <script src="~/Scripts/assets/js/grid.locale-cn.js"></script>
}

@section footer_script{
    <script type="text/javascript">
        $(document).ready(function () {
            @if (!RpRv.Chk_UsrCanReview(ScrNo, User.Identity.Name)) {
                <text>
            $('.Review').hide()
            </text>
            }

        })

        $('#Review_Y').click(function () {
            if (!confirm('是否確定要通過審核?')) { return false }

            var RvResult = '01'
            var IsNext = 'Y'
            if ($('#Review_F').is(':checked')) {
                RvResult = '99'
                IsNext = 'N'
            }                        
            Review('@ScrNo', RvResult, IsNext)
            $(this).attr('href', '/@sPrgCode/Index')
        })

        $('#Review_N').click(function () {
            if (!confirm('是否確定要退回審核?')) { return false }

            var RvResult = '02'
            var IsNext = 'Y'
            if ($('#Review_F').is(':checked')) {
                RvResult = '98'
                IsNext = 'N'
            }
            Review('@ScrNo', RvResult, IsNext)
            $(this).attr('href', '/@sPrgCode/Index')
        })

        function Review(k, result, IsNext) {
            $.ajax({
                method: 'post',
                async: false,
                url: '@Url.Action("Review", sPrgCode)',
                data: {
                    K: function () { return k; },
                    Result: function () { return result; },
                    Review_memo: function () { return $('[name=review_memo]').val(); },
                    IsNext: function () { return IsNext; },
                },
            })
        }

        $(document).on('focus', '.AutoCom', function () {
            var Common_str = [];
            var id = $(this).attr('id')
            $.ajax({
                method: 'post',
                async: false,
                url: '@Url.Action("Get_CommonStr", sPrgCode)',
                data: {
                    Key: function () { return id; },
                },
                success: function (data) {
                    if (data != "") {
                        for (let i = 0; i < data.split(",").length; i++) {
                            var d = data.split(",")[i]
                            Common_str.push(d);
                        }
                        $("#" + id).autocomplete({
                            source: Common_str
                        });
                    }
                },
            })
        })


        $(".date-picker").datepicker({ language: 'zh-TW', format: "yyyy/mm/dd", autoclose: true }).attr("autocomplete", 'off');

        //input才需要檢查
        $('.check').change(function () {
            Chk_Input($(this).attr('id'), $(this).val())
        })

        $('#save').click(function () {
            var submit = true
            $(".check").each(function () {
                if (Chk_Input($(this).attr('id'), $(this).val()) == false) {
                    submit = false
                }
            });
            if (submit) {
                if (confirm('是否確定要儲存?') == true) {
                    $("form").submit()
                }
            }
        })

        function Chk_Input(k, v) {
            var bool
            $.ajax({
                method: "post",
                async: false,
                url: '@Url.Action("Chk_Input", sPrgCode)',
                data: {
                    Key: function () { return k; },
                    pValue: function () { return v; },
                },
                success: function (data) {
                    if (data != '') {
                        $('#err_' + k).attr('style', 'display:block');
                        $('#err_' + k).find('label').text(data)
                        $('#' + k).select()
                        $('#' + k).focus()
                        $('#' + k).parents('.form-group').find('label').css({ "color": "red" })
                        bool = false
                    }
                    else {
                        $('#err_' + k).attr('style', 'display:none');
                        $('#' + k).parents('.form-group').find('label').removeAttr('style')
                        bool = true
                    }
                }
            })
            return bool
        }

        //固定物件碼----------------------------------------------------------------------------------------------------------------------

        autosize($('textarea[class*=autosize]'));

        if (!ace.vars['touch']) {
            $('.chosen-select').chosen({ allow_single_deselect: true });
            //resize the chosen on window resize

            $(window)
            .off('resize.chosen')
            .on('resize.chosen', function () {
                $('.chosen-select').each(function () {
                    var $this = $(this);
                    $this.next().css({ 'width': $this.parent().width() });
                })
            }).trigger('resize.chosen');
            //resize chosen on sidebar collapse/expand
            $(document).on('settings.ace.chosen', function (e, event_name, event_val) {
                if (event_name != 'sidebar_collapsed') return;
                $('.chosen-select').each(function () {
                    var $this = $(this);
                    $this.next().css({ 'width': $this.parent().width() });
                })
            });

            $('#chosen-multiple-style .btn').on('click', function (e) {
                var target = $(this).find('input[type=radio]');
                var which = parseInt(target.val());
                if (which == 2) $('#form-field-select-4').addClass('tag-input-style');
                else $('#form-field-select-4').removeClass('tag-input-style');
            });
        }


        $('.multiselect').multiselect({
            enableFiltering: true,
            enableHTML: true,
            allSelectedText: false,
            numberDisplayed: 10,
            includeSelectAllOption: true,
            maxHeight: 450,
            buttonWidth: 300,
            buttonClass: 'btn btn-white btn-primary',
            templates: {
                button: '<button type="button" class="multiselect dropdown-toggle" data-toggle="dropdown"><span class="multiselect-selected-text"></span> &nbsp;<b class="fa fa-caret-down"></b></button>',
                ul: '<ul class="multiselect-container dropdown-menu"></ul>',
                filter: '<li class="multiselect-item filter"><div class="input-group"><span class="input-group-addon"><i class="fa fa-search"></i></span><input class="form-control multiselect-search" type="text"></div></li>',
                filterClearBtn: '<span class="input-group-btn"><button class="btn btn-default btn-white btn-grey multiselect-clear-filter" type="button"><i class="fa fa-times-circle red2"></i></button></span>',
                li: '<li><a tabindex="0"><label></label></a></li>',
                divider: '<li class="multiselect-item divider"></li>',
                liGroup: '<li class="multiselect-item multiselect-group"><label></label></li>'
            }
        });



        var grid_selector = "#grid-table";
        var pager_selector = "#grid-pager";
        var parent_column = $(grid_selector).closest('[class*="col-"]');

        //resize to fit page size
        $(window).on('resize.jqGrid', function () {
            $(grid_selector).jqGrid('setGridWidth', parent_column.width());
        })

        //resize on sidebar collapse/expand
        $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
            if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                setTimeout(function () {
                    $(grid_selector).jqGrid('setGridWidth', parent_column.width());
                }, 20);
            }
        })

        var getColumnIndexByName = function (grid, columnName) {
            var cm = grid.jqGrid('getGridParam', 'colModel'), i, l = cm.length;
            for (i = 0; i < l; i++) {
                if (cm[i].name === columnName) {
                    return i; // return the index
                }
            }
            return -1;
        }

        var field_width = "5,20,20,10,15,15,15,50"

        //JqGrid本體主要設定
        jQuery(grid_selector).jqGrid({
            url: "@Url.Action("Get_GridData", sPrgCode)",
            mtype: "Post",
            datatype: "json",
            //width: "100%",
            autowidth: true,
            postData: {
                K: function () { return "@ScrNo"; }
            },
            height: 'auto',
            colModel: [
               @if (Grid_Field != "") {
                   for (int i = 0;i < Grid_Field.Split(',').Length;i++) {
                       string sField = Grid_Field.Split(',')[i];
                <text>
                        {
                            label: '@CT2.Get_FieldName(sField)', name: '@sField', index: '@sField', width: field_width.split(",")[@i], sorttype: "string", editable: true, edittype: "text",
                            editoptions: { readonly: true, maxlength: 10, defaultValue: "" }
                        },
               </text>
                       }
               }
            ],
            viewrecords: true,
            rowNum: DisplayRowNum(),  //10,
            rowList: [10, 20, 30, 50, 100],
            pager: pager_selector,
            altRows: true,
            //toppager: true,
            multiselect: true,
            //multikey: "ctrlKey",
            multiboxonly: true,
            multiselectWidth: -6,  // hide checkbox column
            loadonce: true,   // sort, change datatype to local
            //navOptions: { reloadGridOptions: { fromServer: true } },  // not works,  maybe need to use "free jqgrid"
            loadComplete: function () {
                loadGridParameters($(grid_selector));
                var table = this;
                setTimeout(function () {
                    styleCheckbox(table);
                    updateActionIcons(table);
                    updatePagerIcons(table);
                    enableTooltips(table);
                }, 0);

                Set_SearchToolbar()

                var iCol = getColumnIndexByName(jQuery(grid_selector), 'myac');
                // inline delete button

            },
            //editurl: "@Url.Action("Update_Common", sPrgCode)",
            onSelectRow: function (rowid) {
                localStorage.setItem("selrowId", rowid)
            }
        });
        $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size

        //enable search/filter toolbar

        //switch element when editing inline
        function aceSwitch(cellvalue, options, cell) {
            setTimeout(function () {
                $(cell).find('input[type=checkbox]')
                    .addClass('ace ace-switch ace-switch-5')
                    .after('<span class="lbl"></span>');
            }, 0);
        }
        //enable datepicker
        function pickDate(cellvalue, options, cell) {
            setTimeout(function () {
                $(cell).find('input[type=text]')
                    .datepicker({ format: 'yyyy-mm-dd', autoclose: true });
            }, 0);
        }

        //navButtons
        jQuery(grid_selector).jqGrid('navGrid', pager_selector,
            { 	//navbar options
                edit: false,
                editicon: 'ace-icon fa fa-pencil blue',
                add: false,
                addicon: 'ace-icon fa fa-plus-circle purple',
                del: false,
                delicon: 'ace-icon fa fa-trash-o red',
                search: true,
                searchicon: 'ace-icon fa fa-search orange',
                refresh: true,
                refreshicon: 'ace-icon fa fa-refresh green',
                view: true,
                viewicon: 'ace-icon fa fa-search-plus grey'
            },
        {}, {
            //new record form 明細新增記錄的form
            //width: 700,
            closeAfterAdd: true,
            recreateForm: true,
            refresh: true,
            viewPagerButtons: false,
            beforeShowForm: function (e) {

                var form = $(e[0]);
                form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar')
                .wrapInner('<div class="widget-header" />')
                style_edit_form(form)
            },
            afterShowForm: function (form) {

                form.closest('div.ui-jqdialog').center();
            },
            reloadAfterSubmit: true,
            // .trigger('reloadGrid')
            afterSubmit: function (response, postdata) {

                $(this).jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid')

                return [true, ""]
            },
            afterComplete: function (response, postdata, formid) {
                // set last page
                let lastpage = $(this).getGridParam('lastpage')

                $(this).jqGrid('setGridParam', { page: lastpage }).trigger('reloadGrid')

                // set selected row
                let lastrowId = $(this).find(">tbody>tr.jqgrow:last").attr('id');
                $(this).jqGrid('resetSelection');
                $(this).jqGrid('setSelection', lastrowId, false);

            },
            //url: "@Url.Action("Insert_Common", sPrgCode)"
        },
            {
                //del
                closeAfterEdit: true,
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    style_edit_form(form);
                },
                afterSubmit: function () { $(this).jqGrid('setGridParam', { datatype: 'json' }); return [true, ""] }
            },
            {
                //search form
                recreateForm: true,
                afterShowSearch: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                    style_search_form(form);
                },
                afterRedraw: function () {
                    style_search_filters($(this));
                }
                ,
                multipleSearch: true,
                /**
                multipleGroup:true,
                showQuery: true
                */
            },
            {
                //view record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                },
                afterSubmit: function () { $(this).jqGrid('setGridParam', { datatype: 'json' }); return [true, ""] }
            }
        )

        // toolbar initial
        jQuery(grid_selector).jqGrid('filterToolbar', {
            stringResult: true,
            searchOnEnter: false
        });


        function Set_SearchToolbar() {

            let search_toolbar = $('#gbox_' + grid_selector.substring(1)).find('.ui-search-toolbar').eq(0)
            // set height
            search_toolbar.css('height', '4em')
            // set input placeholder and autocomplete off
            let labels = $('#gbox_' + grid_selector.substring(1)).find('.ui-jqgrid-labels').eq(0);
            let colName = "";
            search_toolbar.find('th').find('input').attr('autocomplete', 'off')
            search_toolbar.find('th').each(function (i) {
                colName = labels.find('th').eq(i).text();
                $(this).find('input').attr('placeholder', '搜尋 ' + colName)
            })

        }

        // *** JqGrid Persist State *** //
        // jqgrid save state function
        function saveGridParameters(grid) {
            // Load GridParam
            let gridInfo = new Object();

            gridInfo.url = grid.jqGrid('getGridParam', 'url');
            gridInfo.sortname = grid.jqGrid('getGridParam', 'sortname');
            gridInfo.sortorder = grid.jqGrid('getGridParam', 'sortorder');
            //gridInfo.selrow = grid.jqGrid('getGridParam', 'selrow');
            gridInfo.page = grid.jqGrid('getGridParam', 'page');
            gridInfo.rowNum = grid.jqGrid('getGridParam', 'rowNum');
            gridInfo.postData = grid.jqGrid('getGridParam', 'postData');
            gridInfo.search = grid.jqGrid('getGridParam', 'search');

            let ids = [];
            grid.find("tr:has(.sgexpanded)").each(function () {
                ids.push($(this).attr('id'));
            });
            gridInfo.subgridIds = ids;

            // Serialize it to as JSON-String
            let gridParams = JSON.stringify(gridInfo);

            // Save the serialized Griddata in the localStorage
            //localStorage.setItem("gridParams", gridParams);
            localStorage.setItem(grid.jqGrid('getGridParam', 'url'), gridParams);
        };

        // jqgrid load state function
        function loadGridParameters(grid) {

            let url = grid.jqGrid('getGridParam', 'url')
            // jqgrid state save
            if (localStorage.getItem(url) != "" && localStorage.getItem(url) != null) {
                let gridInfo = JSON.parse(localStorage.getItem(url));

                //var $this = $(this);
                let $this = grid;

                // selrow
                $this.jqGrid('setSelection', localStorage.getItem("selrowId"), false);

                if ($this.jqGrid("getGridParam", "datatype") === "json") {
                    setTimeout(function () {
                        //$this.trigger("reloadGrid", [{
                        //    current: true,
                        //    page: gridInfo.page,
                        //    postData: gridInfo.postData,
                        //}]);
                        $this.jqGrid("setGridParam", {
                            datatype: "local",
                            page: gridInfo.page,
                            //postData: gridInfo.postData,
                            sortname: gridInfo.sortname,
                            sortorder: gridInfo.sortorder,
                            rowNum: gridInfo.rowNum,
                            search: gridInfo.search
                        });
                        if (gridInfo.postData.filters != "" && gridInfo.postData.filters != null) {
                            let rules = JSON.parse(gridInfo.postData.filters).rules;
                            if (rules != [] && rules != "") {
                                $this.jqGrid("setGridParam", {
                                    postData: gridInfo.postData,

                                });
                            }
                        }
                        $this.trigger("reloadGrid");
                    }, 50);

                }
                // retain subgrid expand
                if (gridInfo.subgridIds != null && gridInfo.subgridIds != []) {
                    for (var j = 0; j < gridInfo.subgridIds.length; j = j + 1) {
                        $this.jqGrid('expandSubGridRow', gridInfo.subgridIds[j]);
                    }
                }
                // end
            }
        }
        function DisplayRowNum() {
            if (localStorage.getItem("gridParams") != "" && localStorage.getItem("gridParams") != null) {
                let gridInfo = JSON.parse(localStorage.getItem("gridParams"));
                return gridInfo.rowNum;
            } else {
                return 10;
            }
        }

        window.addEventListener("beforeunload", function (event) {
            saveGridParameters(jQuery(grid_selector))
        });

        // *** JqGrid Persist State End *** //

        // reset jqgrid params
        $('#refresh_grid-table').click(function () {
            localStorage.setItem("gridParams", "");
            localStorage.setItem("selrowId", "");
            localStorage.setItem($(grid_selector).jqGrid('getGridParam', 'url'), "");
            $(grid_selector).jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid')
        })

        function style_delete_form(form) {
            var buttons = form.next().find('.EditButton .fm-button');
            buttons.addClass('btn btn-sm btn-white btn-round').find('[class*="-icon"]').hide();//ui-icon, s-icon
            buttons.eq(0).addClass('btn-danger').prepend('<i class="ace-icon fa fa-trash-o"></i>');
            buttons.eq(1).addClass('btn-default').prepend('<i class="ace-icon fa fa-times"></i>')
        }

        function style_search_filters(form) {
            form.find('.delete-rule').val('X');
            form.find('.add-rule').addClass('btn btn-xs btn-primary');
            form.find('.add-group').addClass('btn btn-xs btn-success');
            form.find('.delete-group').addClass('btn btn-xs btn-danger');
        }
        function style_search_form(form) {
            var dialog = form.closest('.ui-jqdialog');
            var buttons = dialog.find('.EditTable')
            buttons.find('.EditButton a[id*="_reset"]').addClass('btn btn-sm btn-info').find('.ui-icon').attr('class', 'ace-icon fa fa-retweet');
            buttons.find('.EditButton a[id*="_query"]').addClass('btn btn-sm btn-inverse').find('.ui-icon').attr('class', 'ace-icon fa fa-comment-o');
            buttons.find('.EditButton a[id*="_search"]').addClass('btn btn-sm btn-purple').find('.ui-icon').attr('class', 'ace-icon fa fa-search');
        }

        function beforeDeleteCallback(e) {
            var form = $(e[0]);
            if (form.data('styled')) return false;
            form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
            style_delete_form(form);
            form.data('styled', true);
        }

        function beforeEditCallback(e) {
            var form = $(e[0]);
            form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
            style_edit_form(form);
        }

        //it causes some flicker when reloading or navigating grid
        //it may be possible to have some custom formatter to do this as the grid is being created to prevent this
        //or go back to default browser checkbox styles for the grid
        function styleCheckbox(table) {
            /**
                $(table).find('input:checkbox').addClass('ace')
                .wrap('<label />')
                .after('<span class="lbl align-top" />')


                $('.ui-jqgrid-labels th[id*="_cb"]:first-child')
                .find('input.cbox[type=checkbox]').addClass('ace')
                .wrap('<label />').after('<span class="lbl align-top" />');
            */
        }

        //unlike navButtons icons, action icons in rows seem to be hard-coded
        //you can change them like this in here if you want
        function updateActionIcons(table) {
            /**
            var replacement =
            {
                'ui-ace-icon fa fa-pencil' : 'ace-icon fa fa-pencil blue',
                'ui-ace-icon fa fa-trash-o' : 'ace-icon fa fa-trash-o red',
                'ui-icon-disk' : 'ace-icon fa fa-check green',
                'ui-icon-cancel' : 'ace-icon fa fa-times red'
            };
            $(table).find('.ui-pg-div span.ui-icon').each(function(){
                var icon = $(this);
                var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
                if($class in replacement) icon.attr('class', 'ui-icon '+replacement[$class]);
            })
            */
        }

        function style_edit_form(form) {
            //enable datepicker on "sdate" field and switches for "stock" field
            form.find('input[name=sdate]').datepicker({ format: 'yyyy-mm-dd', autoclose: true })

            form.find('input[name=stock]').addClass('ace ace-switch ace-switch-5').after('<span class="lbl"></span>');
            //don't wrap inside a label element, the checkbox value won't be submitted (POST'ed)
            //.addClass('ace ace-switch ace-switch-5').wrap('<label class="inline" />').after('<span class="lbl"></span>');


            //update buttons classes
            var buttons = form.next().find('.EditButton .fm-button');
            buttons.addClass('btn btn-sm').find('[class*="-icon"]').hide();//ui-icon, s-icon
            buttons.eq(0).addClass('btn-primary').prepend('<i class="ace-icon fa fa-check"></i>');
            buttons.eq(1).prepend('<i class="ace-icon fa fa-times"></i>')

            buttons = form.next().find('.navButton a');
            buttons.find('.ui-icon').hide();
            buttons.eq(0).append('<i class="ace-icon fa fa-chevron-left"></i>');
            buttons.eq(1).append('<i class="ace-icon fa fa-chevron-right"></i>');
        }

        //replace icons with FontAwesome icons like above
        function updatePagerIcons(table) {
            var replacement =
            {
                'ui-icon-seek-first': 'ace-icon fa fa-angle-double-left bigger-140',
                'ui-icon-seek-prev': 'ace-icon fa fa-angle-left bigger-140',
                'ui-icon-seek-next': 'ace-icon fa fa-angle-right bigger-140',
                'ui-icon-seek-end': 'ace-icon fa fa-angle-double-right bigger-140'
            };
            $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {
                var icon = $(this);
                var $class = $.trim(icon.attr('class').replace('ui-icon', ''));

                if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
            })
        }

        function enableTooltips(table) {
            $('.navtable .ui-pg-button').tooltip({ container: 'body' });
            $(table).find('.ui-pg-div').tooltip({ container: 'body' });
        }

        //var selr = jQuery(grid_selector).jqGrid('getGridParam','selrow');

        $(document).one('ajaxloadstart.page', function (e) {
            $.jgrid.gridDestroy(grid_selector);
            $('.ui-jqdialog').remove();
        });


        function AdjustGridWidth(tableId) {
            let grid_selector = 'table[id^="' + tableId + '"]'
            var parent_column = $(grid_selector).closest('[class*="col-"]');
            $(grid_selector).jqGrid('setGridWidth', parent_column.width());
        }


    </script>
}
