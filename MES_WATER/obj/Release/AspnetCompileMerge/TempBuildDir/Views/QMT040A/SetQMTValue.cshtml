@using MES_WATER.Models;
@using MES_WATER.Controllers;
@{
    Layout = null;
    DynamicTable DT = new DynamicTable();
    QMT040AController CT = new QMT040AController();

    string sTkCode = Request.QueryString["K"];

    //Ajax函示庫
    Html.RenderAction("AjaxFunction", "AjaxFunction");

}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta charset="utf-8" />
    <title>檢驗紀錄結果</title>

    <meta name="description" content="Dynamic tables and grids using jqGrid plugin" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0" />

    <!-- bootstrap & fontawesome -->
    <link rel="stylesheet" href="~/Content/assets/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/Content/assets/font-awesome/4.5.0/css/font-awesome.min.css" />

    <!-- page specific plugin styles -->
    <link rel="stylesheet" href="~/Content/assets/css/jquery-ui.min.css" />
    <link rel="stylesheet" href="~/Content/assets/css/bootstrap-datepicker3.min.css" />
    <link rel="stylesheet" href="~/Content/assets/css/ui.jqgrid.min.css" />
    <link rel="stylesheet" href="~/Content/assets/css/fonts.googleapis.com.css" />
    <link rel="stylesheet" href="~/Content/assets/css/ace.min.css" class="ace-main-stylesheet" id="main-ace-style" />
    <link rel="stylesheet" href="~/Content/assets/css/ace-skins.min.css" />
    <link rel="stylesheet" href="~/Content/assets/css/ace-rtl.min.css" />

    <script src="~/Scripts/assets/js/ace-extra.min.js"></script>

</head>

<body class="no-skin">
    <p></p>
    <div class="no-margin-top">
        <button name="close" class="btn btn-sm btn-danger pull-left">
            <i class="ace-icon fa fa-times"></i>
            關閉
        </button>

        <input name="sample_qty" type="number" style="margin-left:20px" value="0" onclick="$(this).select()"/>
        <button name="batch_qmt" class="btn btn-white btn-info btn-round" style="margin-left:10px">
            建立批次檢驗
        </button>


        <button name="modify" class="btn btn-white btn-info btn-round" style="margin-left:20px">
            編輯
        </button>

        <button name="save" class="btn btn-white btn-success btn-round" style="margin-left:20px;display:none">
            存檔
        </button>

        <button name="cancel" class="btn btn-white btn-pink btn-round" style="margin-left:10px;display:none">
            取消
        </button>


    </div>

    <div class="row">
        <div class="col-xs-12">
            <table id="grid-table"></table>
            <div id="grid-pager"></div>
        </div>
    </div>


    <script src="~/Scripts/assets/js/jquery-2.1.4.min.js"></script>
    <script type="text/javascript">
        if ('ontouchstart' in document.documentElement) document.write("<script src='assets/js/jquery.mobile.custom.min.js'>" + "<" + "/script>");
    </script>
    <script src="~/Scripts/assets/js/bootstrap.min.js"></script>

    <!-- page specific plugin scripts -->
    <script src="~/Scripts/assets/js/bootstrap-datepicker.min.js"></script>
    <script src="~/Scripts/assets/js/jquery.jqGrid.min.js"></script>
    @*<script src="~/Scripts/assets/js/grid.locale-en.js"></script>*@
    <script src="~/Scripts/assets/js/grid.locale-cn.js"></script>
    <!-- ace scripts -->
    <script src="~/Scripts/assets/js/ace-elements.min.js"></script>
    <script src="~/Scripts/assets/js/ace.min.js"></script>

    <!-- inline scripts related to this page -->
    <script type="text/javascript">
        jQuery(function ($) {
            var grid_selector = "#grid-table";
            var pager_selector = "#grid-pager";

            var sQtestItemCode = Get_Data("QMT04_0100", '@sTkCode', "qmt04_0100", "qtest_item_code")
            var sQtestItemName = Get_Data("QMB02_0000", sQtestItemCode, "qtest_item_code", "qtest_item_name")
            var sQtestItemType = Get_Data("QMB02_0000", sQtestItemCode, "qtest_item_code", "qtest_item_type")

            $('[name=close]').click(function () {
                window.opener.$(grid_selector).setGridParam({ datatype: 'json' }).trigger('reloadGrid')
                window.close()
                return false
            })

            $(document).on('click', 'input', function () {
                $(this).select()
            })

            $('[name=modify]').click(function () {
                Modify_Mode(true)
                $('.ui-icon-pencil').click()                
            })

            $('[name=save]').click(function () {
                Modify_Mode(false)
                $('.ui-icon-disk').click()
                setTimeout(function () { $(grid_selector).setGridParam({ datatype: 'json' }).trigger('reloadGrid'); }, 50)
            })

            $('[name=cancel]').click(function () {
                Modify_Mode(false)
                $('.ui-icon-cancel').click()
            })

            $('[name=batch_qmt]').click(function () {
                //檢查輸入框
                var qty = Number($('[name=sample_qty]').val())
                if (qty != 0) {
                    $.ajax({
                        async: false,
                        type: "POST",
                        url: '@Url.Action("Insert_QmtValue_batch")',
                        data: {
                            pTkCode: function () { return '@sTkCode' },
                            pBatchQty: function () { return qty },
                        },
                        success: function () {
                            //非同步執行
                            delay().then(function () {
                                $(grid_selector).setGridParam({ datatype: 'json' }).trigger('reloadGrid');
                                return delay(50)
                            }).then(function () {
                                switch (sQtestItemType) {
                                    case "B":
                                        for (let i = 1; i <= qty; i++) {
                                            $('#jEditButton_' + i).click()
                                        }
                                        break
                                    case "C":
                                        $('#jEditButton_1').click()
                                        break
                                }
                                return delay(10)
                            }).then(function () {
                                Modify_Mode(true)
                                return delay(10)
                            })
                        }
                    })
                } else {
                    alert("請輸入數量")
                }
            })



            function Modify_Mode(bool) {
                if (bool) {
                    $('[name=modify]').hide()
                    $('[name=save]').show()
                    $('[name=cancel]').show()
                    $('.ui-icon-disk').hide()
                    $('.ui-icon-cancel').hide()
                } else {
                    $('[name=modify]').show()
                    $('[name=save]').hide()
                    $('[name=cancel]').hide()
                }
            }


            var parent_column = $(grid_selector).closest('[class*="col-"]');
            //resize to fit page size
            $(window).on('resize.jqGrid', function () {
                $(grid_selector).jqGrid('setGridWidth', parent_column.width());
            })

            //resize on sidebar collapse/expand
            $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
                if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                    //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                    setTimeout(function () {
                        $(grid_selector).jqGrid('setGridWidth', parent_column.width());
                    }, 20);
                }
            })

            //回傳參數
            let PostData = {}
            PostData = {
                qmt04_0100: function () { return '@sTkCode' },
            }

            //函式位置
            let PostUrl = "@Url.Action("Get_QmtValue")"

            //動態抓取datatable欄位
            let FieldArray = '@DT.Get_SqlField(CT.Get_QmtValue_DataTable(sTkCode))'
            let FieldObject = []
            for (let i = 0; i < FieldArray.split(",").length; i++) {
                let field = FieldArray.split(",")[i]
                FieldObject.push(field)
            }

            let ColInfo = []
            $.ajax({
                async: false,
                type: "POST",
                url: PostUrl,
                data: PostData,
            }).done(function (data) {
                try {
                    let o = JSON.parse(data)[0]
                    //let keys = Object.keys(o)

                    //前面先加功能列
                    ColInfo = [{
                        label: '(功能)',
                        name: 'myac', index: '', width: 75, sortable: false, fixed: true, //resize: false,
                        search: false,
                        formatter: 'actions',
                        formatoptions: {
                            //keys: true,
                            onSuccess: function () {
                                $(this).setGridParam({ datatype: 'json' }).trigger('reloadGrid');
                            },
                            delbutton: true,
                            editbutton: true,
                            delOptions: {
                                recreateForm: true,
                                beforeShowForm: beforeDeleteCallback,
                                url: "@Url.Action("Delete_QmtValue")",
                                mtype: 'post',
                                delData: {
                                    qmt04_0110: function () {
                                        //Get data from selected row
                                        let id = jQuery(grid_selector).jqGrid('getGridParam', 'selrow');
                                        let data = jQuery(grid_selector).jqGrid('getRowData', id);
                                        return data["qmt04_0110"];
                                    }
                                }
                            },
                        }
                    }].concat(FieldObject.map(function (item, index) {
                        var CanEdit = false
                        var ReadOnly = false
                        var IsHide = false
                        var FieldName = item

                        var QtestItemType = Get_Data("QMT04_0100", '@sTkCode', "qmt04_0100", "qtest_item_type")
                        var QtestUp = ParseToDecimel_G29(Get_Data("QMT04_0100", '@sTkCode', "qmt04_0100", "qtest_up"))
                        var QtestDown = ParseToDecimel_G29(Get_Data("QMT04_0100", '@sTkCode', "qmt04_0100", "qtest_down"))

                        switch (item) {
                            case 'qmt04_0110':
                                IsHide = true
                                CanEdit = true
                                break
                            case 'qmt04_0100':
                                IsHide = true
                                break
                            case 'qtest_item_code':
                                FieldName = "檢驗項目代號"
                                CanEdit = true
                                ReadOnly = true
                                break
                            case 'qtest_item_name':
                                FieldName = "檢驗項目名稱"
                                CanEdit = true
                                ReadOnly = true
                                break
                            case 'qmt_value':
                                FieldName = "檢驗結果"
                                if (QtestItemType == "B") {
                                    FieldName = "檢驗結果(" + QtestDown + " ~ " + QtestUp + ")"
                                }                                
                                CanEdit = true
                                break
                            case 'ins_date':
                                FieldName = "建立日期"
                                break
                            case 'ins_time':
                                FieldName = "建立時間"
                                break
                            case 'usr_code':
                                FieldName = "建立人員"
                                break
                            case 'is_ok':
                                FieldName = "判定結果"
                                break
                            case 'sample_qty':
                                FieldName = "樣品數"
                                break
                            case 'scr_no':
                                FieldName = "序號"
                                break
                        }

                        let o = {
                            name: item,
                            label: FieldName,
                            editable: CanEdit,
                            hidden: IsHide,
                            editoptions: {
                                readonly: ReadOnly,
                            }
                        }


                        if (item == "qmt_value") {
                            switch (QtestItemType) {
                                case "B":
                                    o = {
                                        name: item,
                                        label: FieldName,
                                        editable: true,
                                        formatter: 'integer',
                                        formatoptions: { thousandsSeparator: "," },
                                        editrules: {
                                            number: true,
                                        },
                                        editoptions: {
                                            placeholder: QtestDown + " ~ " +  QtestUp
                                        },
                                    }
                                    break
                                case "C":
                                    o = {
                                        name: item,
                                        label: FieldName,
                                        editable: CanEdit,
                                        edittype: "checkbox",
                                        hidden: IsHide,
                                        editoptions: { value: "Y:N" },
                                        unformat: aceSwitch
                                    }
                                    break
                            }
                        }

                        return o
                    }))

                } catch (e) {
                    console.log(e.message)
                }

            })

            jQuery(grid_selector).jqGrid({
                url: PostUrl,
                type: "POST",
                datatype: "json",
                height: 'auto',
                postData: PostData,
                colModel: ColInfo,
                viewrecords: true,
                rowNum: 10,
                rowList: [10, 20, 30],
                pager: pager_selector,
                altRows: true,
                multiselect: true,
                multiboxonly: true,
                multiselectWidth: -30,
                loadonce: true,
                loadComplete: function () {
                    var table = this;
                    setTimeout(function () {
                        styleCheckbox(table);
                        updateActionIcons(table);
                        updatePagerIcons(table);
                        enableTooltips(table);
                    }, 0);

                    //$(document).on('hide', '.ui-icon-pencil')
                    $('.ui-icon-pencil').hide()
                },
                editurl: "@Url.Action("Update_QmtValue")",
            });

            $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size

            //switch element when editing inline
            function aceSwitch(cellvalue, options, cell) {
                setTimeout(function () {
                    $(cell).find('input[type=checkbox]')
                        .addClass('ace ace-switch ace-switch-6')
                        .after('<span class="lbl"></span>');
                }, 0);
            }
            //enable datepicker
            function pickDate(cellvalue, options, cell) {
                setTimeout(function () {
                    $(cell).find('input[type=text]')
                        .datepicker({ format: 'yyyy-mm-dd', autoclose: true });
                }, 0);
            }


            //navButtons
            jQuery(grid_selector).jqGrid('navGrid', pager_selector,
                { 	//navbar options
                    edit: false,
                    editicon: 'ace-icon fa fa-pencil blue',
                    add: true,
                    addicon: 'ace-icon fa fa-plus-circle purple',
                    del: false,
                    delicon: 'ace-icon fa fa-trash-o red',
                    search: true,
                    searchicon: 'ace-icon fa fa-search orange',
                    refresh: true,
                    refreshicon: 'ace-icon fa fa-refresh green',
                    view: true,
                    viewicon: 'ace-icon fa fa-search-plus grey',
                },
                {
                    //edit record form
                    closeAfterEdit: true,
                    width: 700,
                    recreateForm: true,
                    beforeShowForm: function (e) {
                        var form = $(e[0]);
                        form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                        style_edit_form(form);
                    }
                },
                {
                    //new record form
                    width: 700,
                    closeAfterAdd: true,
                    recreateForm: true,
                    viewPagerButtons: false,
                    beforeShowForm: function (e) {
                        var form = $(e[0]);
                        form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar')
                        .wrapInner('<div class="widget-header" />')
                        style_edit_form(form);
                    },
                    afterSubmit: function () { $(this).jqGrid('setGridParam', { datatype: 'json' }); return [true, ""] },
                    url: "@Url.Action("Insert_QmtValue")?pTkCode=@sTkCode"
                },
                {
                    //delete record form
                    recreateForm: true,
                    beforeShowForm: function (e) {
                        var form = $(e[0]);
                        if (form.data('styled')) return false;

                        form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                        style_delete_form(form);

                        form.data('styled', true);
                    },
                    onClick: function (e) {

                    }
                },
                {
                    //search form
                    recreateForm: true,
                    afterShowSearch: function (e) {
                        var form = $(e[0]);
                        form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                        style_search_form(form);
                    },
                    afterRedraw: function () {
                        style_search_filters($(this));
                    }
                    ,
                    multipleSearch: true,
                    /**
                    multipleGroup:true,
                    showQuery: true
                    */
                },
                {
                    //view record form
                    recreateForm: true,
                    beforeShowForm: function (e) {
                        var form = $(e[0]);
                        form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                    }
                }
            )



            function style_edit_form(form) {
                //enable datepicker on "sdate" field and switches for "stock" field
                //form.find('input[name=sdate]').datepicker({ format: 'yyyy-mm-dd', autoclose: true })

                //don't wrap inside a label element, the checkbox value won't be submitted (POST'ed)
                //.addClass('ace ace-switch ace-switch-5').wrap('<label class="inline" />').after('<span class="lbl"></span>');



                
                form.find('input[name=qtest_item_code]').val(sQtestItemCode)
                form.find('input[name=qtest_item_name]').val(sQtestItemName)

                if (sQtestItemType == "C") {
                    form.find('input[name=qmt_value]').addClass('ace ace-switch ace-switch-6').after('<span class="lbl"></span>');
                } else {
                    //form.find('input[name=qmt_value]').attr('title', '123');
                }




                //update buttons classes
                var buttons = form.next().find('.EditButton .fm-button');
                buttons.addClass('btn btn-sm').find('[class*="-icon"]').hide();//ui-icon, s-icon
                buttons.eq(0).addClass('btn-primary').prepend('<i class="ace-icon fa fa-check"></i>');
                buttons.eq(1).prepend('<i class="ace-icon fa fa-times"></i>')

                buttons = form.next().find('.navButton a');
                buttons.find('.ui-icon').hide();
                buttons.eq(0).append('<i class="ace-icon fa fa-chevron-left"></i>');
                buttons.eq(1).append('<i class="ace-icon fa fa-chevron-right"></i>');
            }

            function style_delete_form(form) {
                var buttons = form.next().find('.EditButton .fm-button');
                buttons.addClass('btn btn-sm btn-white btn-round').find('[class*="-icon"]').hide();//ui-icon, s-icon
                buttons.eq(0).addClass('btn-danger').prepend('<i class="ace-icon fa fa-trash-o"></i>');
                buttons.eq(1).addClass('btn-default').prepend('<i class="ace-icon fa fa-times"></i>')
            }

            function style_search_filters(form) {
                form.find('.delete-rule').val('X');
                form.find('.add-rule').addClass('btn btn-xs btn-primary');
                form.find('.add-group').addClass('btn btn-xs btn-success');
                form.find('.delete-group').addClass('btn btn-xs btn-danger');
            }
            function style_search_form(form) {
                var dialog = form.closest('.ui-jqdialog');
                var buttons = dialog.find('.EditTable')
                buttons.find('.EditButton a[id*="_reset"]').addClass('btn btn-sm btn-info').find('.ui-icon').attr('class', 'ace-icon fa fa-retweet');
                buttons.find('.EditButton a[id*="_query"]').addClass('btn btn-sm btn-inverse').find('.ui-icon').attr('class', 'ace-icon fa fa-comment-o');
                buttons.find('.EditButton a[id*="_search"]').addClass('btn btn-sm btn-purple').find('.ui-icon').attr('class', 'ace-icon fa fa-search');
            }

            function beforeDeleteCallback(e) {
                var form = $(e[0]);
                if (form.data('styled')) return false;

                form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                style_delete_form(form);

                form.data('styled', true);
            }

            function beforeEditCallback(e) {
                var form = $(e[0]);
                form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                style_edit_form(form);
            }



            //it causes some flicker when reloading or navigating grid
            //it may be possible to have some custom formatter to do this as the grid is being created to prevent this
            //or go back to default browser checkbox styles for the grid
            function styleCheckbox(table) {
                /**
					$(table).find('input:checkbox').addClass('ace')
					.wrap('<label />')
					.after('<span class="lbl align-top" />')


					$('.ui-jqgrid-labels th[id*="_cb"]:first-child')
					.find('input.cbox[type=checkbox]').addClass('ace')
					.wrap('<label />').after('<span class="lbl align-top" />');
				*/
            }


            //unlike navButtons icons, action icons in rows seem to be hard-coded
            //you can change them like this in here if you want
            function updateActionIcons(table) {
                /**
                var replacement =
                {
                    'ui-ace-icon fa fa-pencil' : 'ace-icon fa fa-pencil blue',
                    'ui-ace-icon fa fa-trash-o' : 'ace-icon fa fa-trash-o red',
                    'ui-icon-disk' : 'ace-icon fa fa-check green',
                    'ui-icon-cancel' : 'ace-icon fa fa-times red'
                };
                $(table).find('.ui-pg-div span.ui-icon').each(function(){
                    var icon = $(this);
                    var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
                    if($class in replacement) icon.attr('class', 'ui-icon '+replacement[$class]);
                })
                */
            }

            //replace icons with FontAwesome icons like above
            function updatePagerIcons(table) {
                var replacement =
                {
                    'ui-icon-seek-first': 'ace-icon fa fa-angle-double-left bigger-140',
                    'ui-icon-seek-prev': 'ace-icon fa fa-angle-left bigger-140',
                    'ui-icon-seek-next': 'ace-icon fa fa-angle-right bigger-140',
                    'ui-icon-seek-end': 'ace-icon fa fa-angle-double-right bigger-140'
                };
                $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {
                    var icon = $(this);
                    var $class = $.trim(icon.attr('class').replace('ui-icon', ''));

                    if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
                })
            }

            function enableTooltips(table) {
                $('.navtable .ui-pg-button').tooltip({ container: 'body' });
                $(table).find('.ui-pg-div').tooltip({ container: 'body' });
            }

            //var selr = jQuery(grid_selector).jqGrid('getGridParam','selrow');

            //$(document).one('ajaxloadstart.page', function (e) {
            //    $.jgrid.gridDestroy(grid_selector);
            //    $('.ui-jqdialog').remove();
            //});
        });
    </script>
</body>
</html>
