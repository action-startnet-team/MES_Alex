@using MES_WATER.Models;
@using System.Reflection;
@using System.ComponentModel.DataAnnotations;
@using System.ComponentModel.DataAnnotations.Schema;

@*修改點 以下*@
@model MES_WATER.Models.WMT0200
@*修改點 以上*@

@{
    //主檔頁面
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //公用函數庫
    Comm comm = new Comm();
    GetModelValidation gmv = new GetModelValidation();

    //公用變數
    string sPrgCode = ViewBag.prg_code;
    string key = gmv.GetKey<WMT0200>(new WMT0200());

    //修改點 向下
    WMT0200 obj = new WMT0200();

    //取得畫面上下拉選單的選項值
    List<DDLList> sto_code_list = comm.Get_DDLOption("WMB01_0000", "sto_code", "sto_name");
    List<DDLList> loc_code_list = comm.Get_DDLOption("WMB02_0000", "loc_code", "loc_code");
    List<DDLList> container_list = comm.Get_DDLOption("WMB03_0000", "pallet_code", "pallet_name");
    List<DDLList> ins_type_list = comm.Get_DDLOption("ins_type");
    List<DDLList> sup_code_list = comm.Get_DDLOption("WMB10_0000", "sup_code", "sup_name");

    //自定義下拉選單的選項值

    //修改點 向上
}

@section head_plugin {
    <link rel="stylesheet" href="~/Content/assets/css/chosen.min.css" />
    <link rel="stylesheet" href="~/Content/assets/css/bootstrap-multiselect.min.css" />
    <link rel="stylesheet" href="~/Content/assets/css/jquery-ui.custom.min.css" />
    <link rel="stylesheet" href="~/Content/assets/css/bootstrap-datepicker3.min.css" />
}

@Html.Partial("pPrgName")
<div class="row">
    <ul class="nav nav-tabs" id="myTab">
        <li class="active">
            <a data-toggle="tab" href="#home">
                <i class="green ace-icon fa fa-home bigger-120"></i>
                主檔
            </a>
        </li>
    </ul>
    <div class="tab-content">
        <div id="home" class="tab-pane fade in active">
            @using (Html.BeginForm("Update", sPrgCode, FormMethod.Post, new { @class = "form-horizontal", id = "validation_form", role = "form" }))
            {
                <div id="errMsgSummary" class="alert alert-danger @( (ViewBag.showErrMsg ?? false ) ? "" : "hidden" )">
                    <button type="button" class="close" data-dismiss="alert">
                        <i class="ace-icon fa fa-times"></i>
                    </button>
                    <strong>
                        <i class="ace-icon fa fa-times"></i>
                        系統訊息!
                    </strong>
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    <br />
                </div>
                @*修改點 向下 輸入畫面編排*@
                <div class="row">
                    <div class="col-xs-4">
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "wmt0200", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.wmt0200, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.wmt0200, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "rel_type", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.rel_type, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.rel_type, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "rel_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.rel_code, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.rel_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "scr_no", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.scr_no, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.scr_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "ins_type", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-sm-8 col-xs-8">
                                    <select class="chosen-select" id="ins_type" name="ins_type" disabled>
                                        @CustomHelper.Get_Option(ins_type_list, Model.ins_type, true)
                                    </select>
                                    @Html.ValidationMessageFor(model => model.ins_type, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "sto_date", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.sto_date, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.sto_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "sto_time", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.sto_time, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.sto_time, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "sto_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-sm-8">
                                    <select class="chosen-select" id="sto_code" name="sto_code" disabled>
                                        @CustomHelper.Get_Option(sto_code_list, Model.sto_code, true)
                                    </select>
                                    @Html.ValidationMessageFor(model => model.sto_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "sup_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-sm-8 col-xs-8">
                                    <select class="chosen-select" id="sup_code" name="sup_code">
                                        @CustomHelper.Get_Option(sup_code_list, Model.sup_code, true)
                                    </select>
                                    @Html.ValidationMessageFor(model => model.sup_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "sup_lot_no", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.sup_lot_no, new { htmlAttributes = new { @class = " col-xs-12" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.sup_lot_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "mft_date", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.mft_date, new { htmlAttributes = new { @class = " col-xs-12" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.mft_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "exp_date", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.exp_date, new { htmlAttributes = new { @class = " col-xs-12" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.exp_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-8">
                        <div class="row">
                            <div class="col-sm-6">
                                @CustomHelper.Get_Label(Model, sPrgCode, "pro_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.pro_code, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.pro_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                @CustomHelper.Get_Label(Model, sPrgCode, "ins_user", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.ins_user, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.ins_user, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-6">
                                @CustomHelper.Get_Label(Model, sPrgCode, "pro_name", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.pro_name, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.pro_name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                @CustomHelper.Get_Label(Model, sPrgCode, "usr_name", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.usr_name, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.usr_name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-6">
                                @CustomHelper.Get_Label(Model, sPrgCode, "lot_no", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.lot_no, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.lot_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                @CustomHelper.Get_Label(Model, sPrgCode, "ins_date", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.ins_date, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.ins_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-6">
                                @CustomHelper.Get_Label(Model, sPrgCode, "pro_qty", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.pro_qty, new { htmlAttributes = new { @class = " col-xs-12" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.pro_qty, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                @CustomHelper.Get_Label(Model, sPrgCode, "ins_time", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.ins_time, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.ins_time, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-6">
                                @CustomHelper.Get_Label(Model, sPrgCode, "loc_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-sm-8">
                                    <select class="chosen-select" id="loc_code" name="loc_code" disabled>
                                        @CustomHelper.Get_Option(loc_code_list, Model.loc_code, true)
                                    </select>
                                    @Html.ValidationMessageFor(model => model.loc_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        @*<div class="row">
                                <div class="col-sm-12">
                                    @Html.LabelFor(model => model.cus_code, htmlAttributes: new { @class = "col-sm-4  col-xs-5 control-label no-padding-right" })
                                    <div class="col-md-8 col-xs-7">
                                        <div>
                                            @Html.EditorFor(model => model.cus_code, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                        </div>
                                        <div style="clear:both;"></div>
                                        @Html.ValidationMessageFor(model => model.cus_code, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <br />*@
                        @*<div class="row">
                                <div class="col-sm-12">
                                    @Html.LabelFor(model => model.wmt0100, htmlAttributes: new { @class = "col-sm-4  col-xs-5 control-label no-padding-right" })
                                    <div class="col-md-8 col-xs-7">
                                        <div>
                                            @Html.EditorFor(model => model.wmt0100, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                        </div>
                                        <div style="clear:both;"></div>
                                        @Html.ValidationMessageFor(model => model.wmt0100, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <br />*@
                        @*<div class="row">
                                <div class="col-sm-12">
                                    <label class="col-sm-4   col-xs-6 control-label no-padding-right" for="form-field-1">
                                        @Html.DisplayNameFor(model => model.container)
                                    </label>
                                    <div class="col-sm-8">
                                        <select class="chosen-select" id="container" name="container" disabled>
                                            @CustomHelper.Get_Option(container_list, Model.container, true)
                                        </select>
                                        @Html.ValidationMessageFor(model => model.container, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>*@
                        @*<div class="row">
                                <div class="col-sm-12">
                                    @Html.LabelFor(model => model.sor_no, htmlAttributes: new { @class = "col-sm-4  col-xs-5 control-label no-padding-right" })
                                    <div class="col-md-8 col-xs-7">
                                        <div>
                                            @Html.EditorFor(model => model.sor_no, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                        </div>
                                        <div style="clear:both;"></div>
                                        @Html.ValidationMessageFor(model => model.sor_no, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <br />*@
                        @*<div class="row">
                                <div class="col-sm-12">
                                    @Html.LabelFor(model => model.tra_code, htmlAttributes: new { @class = "col-sm-4  col-xs-5 control-label no-padding-right" })
                                    <div class="col-md-8 col-xs-7">
                                        <div>
                                            @Html.EditorFor(model => model.tra_code, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                        </div>
                                        <div style="clear:both;"></div>
                                        @Html.ValidationMessageFor(model => model.tra_code, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <br />*@
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @Html.LabelFor(model => model.barcode, htmlAttributes: new { @class = "col-sm-2  col-xs-3 control-label no-padding-right" })
                                <div class="col-md-10 col-xs-9">
                                    <div>
                                        @Html.EditorFor(model => model.barcode, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.barcode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @Html.LabelFor(model => model.identifier, htmlAttributes: new { @class = "col-sm-2  col-xs-3 control-label no-padding-right" })
                                <div class="col-md-10 col-xs-9">
                                    <div>
                                        @Html.EditorFor(model => model.identifier, new { htmlAttributes = new { @class = " col-xs-12", @readonly = "readonly" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.identifier, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @*修改點 向上 輸入畫面編排*@
                <br />
                <div class="clearfix">
                    <div class="col-md-offset-5 col-md-7">
                        <input type="submit" value="儲存" class="btn btn-white btn-info btn-bold" />
                        &nbsp;
                        <a class="btn btn-white btn-pink btn-round" href=@Url.Action("Index", sPrgCode)>
                            <i class="ace-icon fa fa-undo "></i>
                            返回
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section footer_plugin{
    <script src="~/Scripts/assets/js/wizard.min.js"></script>
    <script src="~/Scripts/assets/js/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/assets/js/jquery-additional-methods.min.js"></script>
    <script src="~/Scripts/assets/js/bootbox.js"></script>
    <script src="~/Scripts/assets/js/jquery.maskedinput.min.js"></script>
    <script src="~/Scripts/assets/js/select2.min.js"></script>
    <script src="~/Scripts/assets/js/chosen.jquery.min.js"></script>
    <script src="~/Scripts/assets/js/autosize.min.js"></script>

    <script src="~/Scripts/assets/js/bootstrap-datepicker.min.js"></script>
    <script src="~/Scripts/assets/js/bootstrap-datepicker.zh-TW.min.js"></script>
}
@section footer_script{
    <script type="text/javascript">
        jQuery(function ($) {
            @*修改點 向下 控制項輸入控制參考*@

            //儲位 (倉庫-儲位)
            $("select[name=sto_code]").change(function () {
                let sto_code = $(this).val()
                Set_Loc_DDL(sto_code)
            })

            // 儲位 (倉庫-儲位) 儲位 (倉庫-儲位)
            Set_Loc_DDL("@Model.sto_code")

            function Set_Loc_DDL(sto_code) {
                $.get("Get_LocName?sto_code=" + sto_code, function (data) {
                    $('select[name="loc_code"]').empty()
                    if (data.length > 0) {
                        for (let i = 0 ; i < data.length ; i++) {
                            let loc_display = data[i].loc_code + ' - ' + data[i].loc_code
                            let option = $('<option value="' + data[i].loc_code + '">' + loc_display + '</option>')
                            $('select[name=loc_code]').append(option)
                        }
                    } else {
                        $('select[name=loc_code]').append($('<option value="">沒有儲位!</option>'))
                    }
                    $('select[name=loc_code]').trigger("chosen:updated");

                });
            }


            // 日期的輸入控制
            //$("input[name=sto_date]").datepicker({ language: 'zh-TW', format: "yyyy/mm/dd", autoclose: true }).attr('autocomplete', 'off');
            $("input[name=mft_date]").datepicker({ language: 'zh-TW', format: "yyyy/mm/dd", autoclose: true }).attr('autocomplete', 'off');
            $("input[name=exp_date]").datepicker({ language: 'zh-TW', format: "yyyy/mm/dd", autoclose: true }).attr('autocomplete', 'off');

            @*修改點 向上 控制項輸入控制參考*@

            $("#validation_form").bind("invalid-form.validate", function () {
                $("#errMsgSummary").removeClass('hidden');
            });
            $('#validation_form').submit(function () {
                if ($(this).valid()) {
                    $('#ins_type').removeAttr('disabled')
                    $('#sto_code').removeAttr('disabled')
                    $('#loc_code').removeAttr('disabled')
                    $('#container').removeAttr('disabled')
                } else {
                    $('#ins_type').removeAttr('disabled')
                    $('#sto_code').removeAttr('disabled')
                    $('#loc_code').removeAttr('disabled')
                    $('#container').removeAttr('disabled')
                }
            });

            autosize($('textarea[class*=autosize]'));
            $(document).one('ajaxloadstart.page', function (e) {
                autosize.destroy('textarea[class*=autosize]')

                $('.limiterBox,.autosizejs').remove();
                $('.daterangepicker.dropdown-menu,.colorpicker.dropdown-menu,.bootstrap-datetimepicker-widget.dropdown-menu').remove();
            });

            if (!ace.vars['touch']) {
                $('.chosen-select').chosen({ allow_single_deselect: true });
                //resize the chosen on window resize

                $(window)
                .off('resize.chosen')
                .on('resize.chosen', function () {
                    $('.chosen-select').each(function () {
                        var $this = $(this);
                        $this.next().css({ 'width': $this.parent().width() });
                    })
                }).trigger('resize.chosen');
                //resize chosen on sidebar collapse/expand
                $(document).on('settings.ace.chosen', function (e, event_name, event_val) {
                    if (event_name != 'sidebar_collapsed') return;
                    $('.chosen-select').each(function () {
                        var $this = $(this);
                        $this.next().css({ 'width': $this.parent().width() });
                    })
                });

                $('#chosen-multiple-style .btn').on('click', function (e) {
                    var target = $(this).find('input[type=radio]');
                    var which = parseInt(target.val());
                    if (which == 2) $('#form-field-select-4').addClass('tag-input-style');
                    else $('#form-field-select-4').removeClass('tag-input-style');
                });
            }

        })
    </script>
}