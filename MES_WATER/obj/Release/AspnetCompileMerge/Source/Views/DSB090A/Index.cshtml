
@{
    ViewBag.Title = "Title";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<!-- CSS -->
@section head_plugin{
    <link rel="stylesheet" href="~/Content/assets/KanbanCss.css" />
<link rel="stylesheet" href="~/Content/assets/css/bootstrap-datepicker3.min.css" />
}

<style>
    /* tbody 第一列文字顏色 */ 
    #dynamic-table tbody > tr:first-child {
        color: #FF892A;  /* 橘色 */
        /*color: #307ECC;*/  /* 藍色 */
        font-weight: 700;
    }
    
</style>

<!-- delete confirm -->
<script>
    function Confirm() {
        if (!confirm("您確定要刪除嗎?")) {
            return false;
        }
    }
</script>
<!-- Page Content-->
<div class="row">
    <div class="col-xs-12">
        @Html.Partial("pPrgName")
        @*<div class="clearfix">
            <div class="pull-left" style="width: 250px; margin-right: 10px">
                <div class="input-group">
                    <input type="text" class="form-control" id="mac_code" name="mac_code" placeholder=" mac_code" style="width: 147px">
                    <label for="mac_code">目前mac_code
                    </label>
                </div>
            </div>
            
        </div>
        <div class="space-6"></div>*@
        <div class="clearfix">
            <div class="pull-left" style="width: 250px; margin-right: 10px">
                <div class="input-group">
                    @*<span class="input-group-addon">
                        <i class="ace-icon fa fa-check"></i>
                    </span>*@

                    <input type="text" class="form-control search-query" name="ins_date" placeholder="  yyyy/MM/dd">
                    <span class="input-group-btn">
                        <button id="query" type="button" class="btn btn-inverse btn-white">
                            <span class="ace-icon fa fa-search icon-on-right bigger-110"></span>
                            查詢日期
                        </button>
                    </span>
                </div>
            </div>
            <div class="pull-left" style="margin-right:10px ">
                <a id="clearDB" class="btn btn-white btn-primary btn-bold">
                    <span class=''>清除資料</span>
                </a>
            </div>
            <div class="pull-left">
                <h5>更新倒數: <span id="update_count"></span> 秒</h5>
            </div>

            <div class="pull-right tableTools-container">
            </div>
        </div>
        <!-- table begin -->
        <div>
            <table id="dynamic-table" class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th></th>
                        <th >WS1</th>
                        <th></th>
                        <th></th>
                        <th>WS2</th>
                        <th></th>
                        <th></th>
                        <th>WS3</th>
                        <th></th>
                        <th></th>
                        <th>WS4</th>
                        <th></th>
                        <th></th>
                        <th>WS5</th>
                        <th></th>
                        <th></th>
                        <th>WS6</th>
                        <th></th>
                        <th></th>
                        <th>WS7</th>
                        <th></th>
                        <th></th>
                        <th>WS8</th>
                        <th></th>
                        <th></th>
                        
                    </tr>
                    @*<tr>
                        <th></th>
                        <th colspan="3">WS1</th>
                        <th colspan="3">WS2</th>
                        <th colspan="3">WS3</th>
                        <th colspan="3">WS4</th>
                        <th colspan="3">WS5</th>
                        <th colspan="3">WS6</th>
                        <th colspan="3">WS7</th>
                        <th colspan="3">WS8</th>
                    </tr>*@
                    @*<tr>
                        <th></th>
                        <th>start</th>
                        <th>stop</th>
                        <th>opt</th>
                        <th>start</th>
                        <th>stop</th>
                        <th>opt</th>
                        <th>start</th>
                        <th>stop</th>
                        <th>opt</th>
                        <th>start</th>
                        <th>stop</th>
                        <th>opt</th>

                        <th>start</th>
                        <th>stop</th>
                        <th>opt</th>
                        <th>start</th>
                        <th>stop</th>
                        <th>opt</th>
                        <th>start</th>
                        <th>stop</th>
                        <th>opt</th>
                        <th>start</th>
                        <th>stop</th>
                        <th>opt</th>
                    </tr>*@
                </thead>
                <tbody>
                    <tr>
                        <td></td>
                        <td>start</td>
                        <td>stop</td>
                        <td>opt</td>
                        <td>start</td>
                        <td>stop</td>
                        <td>opt</td>
                        <td>start</td>
                        <td>stop</td>
                        <td>opt</td>
                        <td>start</td>
                        <td>stop</td>
                        <td>opt</td>

                        <td>start</td>
                        <td>stop</td>
                        <td>opt</td>
                        <td>start</td>
                        <td>stop</td>
                        <td>opt</td>
                        <td>start</td>
                        <td>stop</td>
                        <td>opt</td>
                        <td>start</td>
                        <td>stop</td>
                        <td>opt</td>
                    </tr>
                    @*<tr>
                            <td>Job1</td>
                            <td>start: 1<br />stop: 20<br />opt: 20</td>
                            <td>start: 32<br />stop: 40<br />opt: 12</td>
                            <td>start: 50<br />stop: 80<br />opt: 30</td>
                            <td>start: 90<br />stop: 110<br />opt: 20</td>
                        </tr>*@
                    @*<tr>
                            <td>Job1</td>
                            <td>1</td>
                            <td>20</td>
                            <td>20</td>
                            <td>32</td>
                            <td>40</td>
                            <td>12</td>
                            <td>50</td>
                            <td>80</td>
                            <td>30</td>
                            <td>90</td>
                            <td>110</td>
                            <td>20</td>
                        </tr>*@
                </tbody>
            </table>
        </div>
        <!-- table end -->
    </div> <!-- end fo col -->
</div>  <!-- end of row -->

<br />
<div id="div-vsm">


</div>

@section footer_plugin{
    <script src="~/Scripts/assets/js/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/assets/js/jquery.dataTables.bootstrap.min.js"></script>
    <script src="~/Scripts/assets/js/dataTables.buttons.min.js"></script>
    <script src="~/Scripts/assets/js/buttons.flash.min.js"></script>
    <script src="~/Scripts/assets/js/dataTables.select.min.js"></script>
    <script src="~/Scripts/assets/js/buttons.html5.min.js"></script>
    <script src="~/Scripts/assets/js/buttons.colVis.min.js"></script>
    <script src="~/Scripts/assets/js/jszip.min.js"></script>
    <script src="~/Scripts/assets/js/buttons.print.min.js"></script>

    <!-- For VSM -->
    <script type="text/javascript" src="~/Scripts/flot/jquery.flot.min.js"></script>
    <script type="text/javascript" src="~/Scripts/flot/jquery.flot.pie.min.js"></script>
    <script type="text/javascript" src="~/Scripts/flot/jquery.flot.time.min.js"></script>
    <script type="text/javascript" src="~/Scripts/flot/jquery.flot.symbol.min.js"></script>
    <script type="text/javascript" src="~/Scripts/flot/jquery.flot.axislabels.js"></script>

    <!--  -->
<script src="~/Scripts/assets/js/bootstrap-datepicker.min.js"></script>
<script src="~/Scripts/assets/js/bootstrap-datepicker.zh-TW.min.js"></script>
    
}





@section footer_script{
    <!-- jQuery Datatable -->
    <script type="text/javascript">
        jQuery(function ($) {

            // datepicker
            $("input[name='ins_date']")
                .val('2020/05/04')
                .datepicker({ language: 'zh-TW', format: 'yyyy/mm/dd', autoclose: true })
                //.datepicker("setDate", 'now')						      
                .attr('autocomplete', 'off')

            $("#clearDB").click(function () {
                if (!confirm('確定要刪除資料嗎? ')) { return false }
                $.ajax({
                    method: 'post',
                    url: '/DSB090A/Delete_MED15_0000'
                }).done(function () {
                    alert('刪除成功! ')

                    // 重整頁面
                    history.go(0)
                }).fail(function(){
                    alret('刪除失敗! ')
                })
            })

            function getAjax(oAjaxOptions) {
                let defaultOptions = {
                    method: 'get',
                    url: '/DSB090A/test2',
                    data: {
                        pMacCode: 'mac0',
                        pDate: $("input[name='ins_date']").val()
                    }
                }
                let tmp = $.extend({}, defaultOptions)
                let mergeOptions = $.extend(tmp, oAjaxOptions)
                return $.ajax(mergeOptions)
            }
            
            // init
            getAjax().then(function (json) {
                Set_TableDom(json)

                Init_DataTable()
                //let dataTable = Init_DataTable()
                //let rowData = dataTable.rows().data()

                json.forEach((item, index) => {
                    if (item.length > 0) {
                        //Set_SingleVSM(ToVSM(item), { id: `flot${index + 1 > 9 ? index + 1 : '0' + (index + 1)}`, label: `Job${index + 1}` })
                        Set_SingleVSM(ToVSM(item), { id: `flot${index+1}`, label: `Job${index + 1}` })
                    }
                })
            })

            function RefreshAll() {
                // clear
                //$('#dynamic-table').empty()  //只用empty會出現 datatable不能reinitalize的錯誤
                $('#dynamic-table').DataTable().clear().destroy();

                // jquery datatable 無法匯出 多個thead，所以加在tbody裡
                $(`<tr>
                        <td></td>
                        <td>start</td>
                        <td>stop</td>
                        <td>opt</td>
                        <td>start</td>
                        <td>stop</td>
                        <td>opt</td>
                        <td>start</td>
                        <td>stop</td>
                        <td>opt</td>
                        <td>start</td>
                        <td>stop</td>
                        <td>opt</td>

                        <td>start</td>
                        <td>stop</td>
                        <td>opt</td>
                        <td>start</td>
                        <td>stop</td>
                        <td>opt</td>
                        <td>start</td>
                        <td>stop</td>
                        <td>opt</td>
                        <td>start</td>
                        <td>stop</td>
                        <td>opt</td>
                    </tr>`).appendTo($('#dynamic-table > tbody'))

                $('#div-vsm').empty()

                // again call ajax and redraw
                getAjax().then(function (json) {
                    Set_TableDom(json)

                    Init_DataTable()
                    //let dataTable = Init_DataTable()
                    //let rowData = dataTable.rows().data()
                    json.forEach((item, index) => {
                        if (item.length > 0) {
                            Set_SingleVSM(ToVSM(item), { id: `flot${index + 1 > 9 ? index + 1 : '0' + (index + 1)}`, label: `Job${index + 1}` })
                        }
                    })
                })
            }

            // 設定一小時就重整頁面
            // 目前flot更新會有占用記憶體越來越多的問題，這樣應該可以暫時解決
            setTimeout(function () { history.go(0) }, 3600 * 1000)

            // 定時更新
            function Set_TimerUpdate(iSeconds) {
                let count = iSeconds
                $('#update_count').text(count)
                let timer = setInterval(function () {
                    count--
                    if (count == 0) {
                        RefreshAll()
                        count = iSeconds
                    }
                    $('#update_count').text(count)
                    
                }, 1000)

                return timer
            }

            Set_TimerUpdate(10)


            $('#query').click(function () {

                RefreshAll()

                return

                // clear
                //$('#dynamic-table').empty()  //只用empty會出現 datatable不能reinitalize的錯誤
                $('#dynamic-table').DataTable().clear().destroy();
                $('#div-vsm').empty()

                // again call ajax and redraw
                getAjax().then(function (json) {

                    Set_TableDom(json)

                    Init_DataTable()
                    //let dataTable = Init_DataTable()
                    //let rowData = dataTable.rows().data()

                    json.forEach((item, index) => {

                        if (item.length > 0) {
                            Set_SingleVSM(ToVSM(item), { id: `flot${index + 1 > 9 ? index + 1 : '0' + (index + 1)}`, label: `Job${index + 1}` })
                        }
                    })
                })

            })

            function ToVSM(aData) {
                let result = []

                let work_time = 0;
                let break_time = 0;

                // 第一站 工作時間
                for (let i = 0; i < aData[0].opt; i++) {
                    result.push(1);
                }

                // 其他站 休息時間 + 工作時間
                for (let i = 1; i < aData.length; i++) {
                    // 目前站開始 - 上一站結束
                    break_time = aData[i].start - aData[i - 1].stop;
                    for (let j = 0; j < break_time; j++) {
                        result.push(0);
                    }

                    // 假設休息時間已經算好記錄在欄位，或許可以用算的
                    work_time = aData[i].opt;
                    for (let j = 0; j < work_time; j++) {
                        result.push(1);
                    }
                }

                return result
            }

            function Set_TableDom(json) {

                let totalStation = 8
                let rest = 0

                let $table = $('#dynamic-table')
                let $thead = $table.find('thead')
                let $tbody = $table.find('tbody')
                for (let i = 0; i < json.length; i++) {
                    data = json[i]

                    let $tr = $('<tr></tr>')
                    $tr.append($('<td></td>').text(`Job${i+1}`))
                    for (let i = 0; i < data.length; i++) {
                        $tr.append($('<td></td>').text(data[i].start))
                        $tr.append($('<td></td>').text(data[i].stop))
                        $tr.append($('<td></td>').text(data[i].opt))
                        $tr.appendTo($tbody)
                    }

                    rest = totalStation - data.length
                    if (rest > 0) {
                        for (let i = 0; i < rest; i++) {
                            $tr.append($('<td></td>').text(0))
                            $tr.append($('<td></td>').text(0))
                            $tr.append($('<td></td>').text(0))
                            $tr.appendTo($tbody)
                        }
                    }
                }
               
                return $table
            }

            function Init_DataTable() {

                var myTable =
                $('#dynamic-table')
                .DataTable({
                    //"aaSorting": [],

                    bAutoWidth: false,
                    "bStateSave": true,

                    "ordering": false,
                    // deferLoading: 0, //初始化DataTable時，不發出ajax
                    order: [[0, "asc"]],
                    orderMulti: false,
                    select: {
                        style: 'multi'
                    },
                    language: {
                        url: "/Content/assets/Chinese-traditional.json"
                    },
                    initComplete: function () {
                        // Setup - add a text input to each footer cell
                        //$('#dynamic-table thead tr').clone(false).appendTo('#dynamic-table thead');
                        //let colunm_length = $('#dynamic-table thead tr:eq(0) > th').length;
                        //$('#dynamic-table thead tr:eq(1) th').each(function (i) {
                        //    //最後一欄不查詢
                        //    if (i == colunm_length - 1) {
                        //        return false;
                        //    }
                        //    // 移除排序箭頭
                        //    $(this).removeClass('sorting')
                        //    $(this).removeClass('sorting_asc')
                        //    $(this).removeClass('sorting_desc')

                        //    var title = $(this).text();
                        //    $(this).html('<input type="text" placeholder="搜尋 ' + title + '" />');
                        //    $('input', this).css('width', '90%')
                        //    $('input', this).on('keyup change', function () {
                        //        if (myTable.column(i).search() !== this.value) {
                        //            myTable
                        //                .column(i)
                        //                .search(this.value)
                        //                .draw();
                        //        }
                        //    });
                        //});

                        // Restore state
                        var state = myTable.state.loaded();
                        if (state) {
                            myTable.columns().eq(0).each(function (colIdx) {
                                var colSearch = state.columns[colIdx].search;
                                if (colSearch.search) {
                                    //$('input', myTable.column(colIdx).footer()).val(colSearch.search);
                                    $('input', $('#dynamic-table thead tr:eq(1) th').eq(colIdx)).val(colSearch.search);
                                }
                            });
                            //myTable.draw();
                        }
                    },
                    orderCellsTop: true,
                    fixedHeader: true


                });

                //$('#dynamic-table').css('display', 'block');
                ////resize table width

                //var update_size = function () {
                //    $('#dynamic-table').css({ width: $('#dynamic-table').parent().width() });
                //}

                //$(window).resize(function () {
                //    //clearTimeout(window.refresh_size);
                //    //window.refresh_size = setTimeout(function () { update_size(); }, 250);
                //    update_size();

                //});

                $.fn.dataTable.Buttons.defaults.dom.container.className = 'dt-buttons btn-overlap btn-group btn-overlap';

                new $.fn.dataTable.Buttons(myTable, {
                    buttons: [
                      //{
                      //    "extend": "colvis",
                      //    "text": "<i class='fa fa-search bigger-110 blue'></i> <span class='hidden'>展示 / 隱藏欄位</span>",
                      //    "className": "btn btn-white btn-primary btn-bold",
                      //    columns: ':not():not(:last)'
                      //    //columns: ':not(:first):not(:last)'
                      //},
                      //{
                      //    "extend": "copy",
                      //    "text": "<i class='fa fa-copy bigger-110 pink'></i> <span class='hidden'>複製到剪貼簿</span>",
                      //    "className": "btn btn-white btn-primary btn-bold"
                      //},
                     {
                         "extend": "csv",
                         "text": "<i class='fa fa-database bigger-110 orange'></i> <span class='hidden'>匯出CSV</span>",
                         "className": "btn btn-white btn-primary btn-bold",
                         exportOptions: {
                             columns: "thead th:not(.noExport)"
                         }
                     },
                    {
                        "extend": "excel",
                        "text": "<i class='fa fa-file-excel-o bigger-110 green'></i> <span class='hidden'>匯出Excel</span>",
                        "className": "btn btn-white btn-primary btn-bold",
                        exportOptions: {
                            columns: "thead th:not(.noExport)"
                        }
                    },
                    ]
                });
                myTable.buttons().container().appendTo($('.tableTools-container'));

                //style the message box
                var defaultCopyAction = myTable.button(1).action();
                myTable.button(1).action(function (e, dt, button, config) {
                    defaultCopyAction(e, dt, button, config);
                    $('.dt-button-info').addClass('gritter-item-wrapper gritter-info gritter-center white');
                });


                var defaultColvisAction = myTable.button(0).action();
                myTable.button(0).action(function (e, dt, button, config) {
                    defaultColvisAction(e, dt, button, config);
                    if ($('.dt-button-collection > .dropdown-menu').length == 0) {
                        $('.dt-button-collection')
                        .wrapInner('<ul class="dropdown-menu dropdown-light dropdown-caret dropdown-caret" />')
                        .find('a').attr('href', '#').wrap("<li />")
                    }
                    $('.dt-button-collection').appendTo('.tableTools-container .dt-buttons')
                });
                ////
                setTimeout(function () {
                    $($('.tableTools-container')).find('a.dt-button').each(function () {
                        var div = $(this).find(' > div').first();
                        if (div.length == 1) div.tooltip({ container: 'body', title: div.parent().text() });
                        else $(this).tooltip({ container: 'body', title: $(this).text() });
                    });
                }, 500);

                myTable.on('select', function (e, dt, type, index) {
                    if (type === 'row') {
                        $(myTable.row(index).node()).find('input:checkbox').prop('checked', true);
                    }
                });
                myTable.on('deselect', function (e, dt, type, index) {
                    if (type === 'row') {
                        $(myTable.row(index).node()).find('input:checkbox').prop('checked', false);
                    }
                });

                /////////////////////////////////
                //table checkboxes
                $('th input[type=checkbox], td input[type=checkbox]').prop('checked', false);

                //select/deselect all rows according to table header checkbox
                $('#dynamic-table > thead > tr > th input[type=checkbox], #dynamic-table_wrapper input[type=checkbox]').eq(0).on('click', function () {
                    var th_checked = this.checked;//checkbox inside "TH" table header

                    $('#dynamic-table').find('tbody > tr').each(function () {
                        var row = this;
                        if (th_checked) myTable.row(row).select();
                        else myTable.row(row).deselect();
                    });
                });

                //select/deselect a row when the checkbox is checked/unchecked
                $('#dynamic-table').on('click', 'td input[type=checkbox]', function () {
                    var row = $(this).closest('tr').get(0);
                    if (this.checked) myTable.row(row).deselect();
                    else myTable.row(row).select();
                });

                $(document).on('click', '#dynamic-table .dropdown-toggle', function (e) {
                    e.stopImmediatePropagation();
                    e.stopPropagation();
                    e.preventDefault();
                });
                //And for the first simple table, which doesn't have TableTools or dataTables
                //select/deselect all rows according to table header checkbox
                var active_class = 'active';
                $('#simple-table > thead > tr > th input[type=checkbox]').eq(0).on('click', function () {
                    var th_checked = this.checked;//checkbox inside "TH" table header

                    $(this).closest('table').find('tbody > tr').each(function () {
                        var row = this;
                        if (th_checked) $(row).addClass(active_class).find('input[type=checkbox]').eq(0).prop('checked', true);
                        else $(row).removeClass(active_class).find('input[type=checkbox]').eq(0).prop('checked', false);
                    });
                });

                //select/deselect a row when the checkbox is checked/unchecked
                $('#simple-table').on('click', 'td input[type=checkbox]', function () {
                    var $row = $(this).closest('tr');
                    if ($row.is('.detail-row ')) return;
                    if (this.checked) $row.addClass(active_class);
                    else $row.removeClass(active_class);
                });
                /********************************/
                //add tooltip for small view action buttons in dropdown menu
                $('[data-rel="tooltip"]').tooltip({ placement: tooltip_placement });

                //tooltip placement on right or left
                function tooltip_placement(context, source) {
                    var $source = $(source);
                    var $parent = $source.closest('table')
                    var off1 = $parent.offset();
                    var w1 = $parent.width();

                    var off2 = $source.offset();
                    //var w2 = $source.width();

                    if (parseInt(off2.left) < parseInt(off1.left) + parseInt(w1 / 2)) return 'right';
                    return 'left';
                }
                /***************/
                $('.show-details-btn').on('click', function (e) {
                    e.preventDefault();
                    $(this).closest('tr').next().toggleClass('open');
                    $(this).find(ace.vars['.icon']).toggleClass('fa-angle-double-down').toggleClass('fa-angle-double-up');
                });
                /***************/


                return myTable
            }
            // end Init_DataTable

            function Set_SingleVSM(data, oHtmlAttr) {

                if (typeof oHtmlAttr === 'undefined') {
                    oHtmlAttr = { id: '', label: '' }
                }

                let $row = $(`<div class="row">
                                <div class="col-xs-12">
                                    <h3>
                                        @*<i class="ace-icon fa fa-line-chart "></i>*@
                                        ${oHtmlAttr.label}
                                    </h3>
                                </div>

                                <div class="col-xs-12">
                                    <div class="container-fluid Kanban_DivArea" style="margin-top:5px;">
                                        @*<table style="float:left;height:65px;color:#ff9000;font-size:30px;" class="col-lg-1">
                                                <tr>
                                                    <td style="line-height:27px; vertical-align:middle;">M001</td>
                                                </tr>
                                                <tr>
                                                    <td style="line-height:27px; vertical-align:middle;"></td>
                                                </tr>
                                            </table>*@

                                    </div>
                                </div>
                            </div>`)

                let $container = $('#div-vsm')
                let $thisFlot = $('<div id="' + oHtmlAttr.id + '" class="col-lg-11 flot-vsm" style="height:150px; margin:0 auto; float:right;"></div>')
                $row.find('.container-fluid').append($thisFlot)
                $container.append($row)

                // line資料初始
                let lineData = [];

                //let totalPoints = 1200;
                //let totalPoints = 3600
                let totalPoints = data.length * 2;
                let tickSize = [60, "second"]  // 刻度間隔
                let updateInterval = 1000;  // 更新間隔，每一點幾秒 單位ms
                let now = new Date().getTime() - totalPoints * updateInterval;
                //let now = new Date().getTime()

                // 初始塞空資料，顯示格線
                while (lineData.length < totalPoints) {
                    now += updateInterval
                    lineData.push([now, -1]);
                }

                // flot options
                var options = {
                    series: {
                        lines: {
                            show: true,
                            lineWidth: 3,
                            fill: false
                        }
                    },

                    //x軸設定
                    xaxis: {
                        mode: "time",
                        tickSize: tickSize,  //刻度間隔 [60, 'second']
                        tickFormatter: function (v, axis) {
                            return ''

                            //var date = new Date(v);
                            //// 時間標籤以每隔n秒的間隔顯示
                            //if (date.getSeconds() % 60 == 0) {
                            //    var hours = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
                            //    var minutes = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
                            //    var seconds = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();

                            //    return hours + ":" + minutes //+ ':' + seconds
                            //} else {
                            //    return "";
                            //}
                        },
                    },
                    //Y軸設定
                    yaxis: {
                        min: 0,
                        max: 2,
                        tickSize: 2,
                        tickFormatter: function (v, axis) {
                            if (v == 0) {
                                return "";
                            } else if (v == 2) {
                                return "";
                            } else {
                                return "";
                            }
                        }
                    },
                    grid: {
                        backgroundColor: "#000000",
                        tickColor: "#888888"
                    }
                };

                // set flot width
                $('.flot-vsm').each(function (i) {
                    let parentWidth = $(this).parent().width()
                    $(this).css('width', parentWidth)
                })

                // adjust width when window resize
                $(window).resize(function () {
                    $('.flot-vsm').each(function (i) {
                        let parentWidth = $(this).parent().width()
                        $(this).css('width', parentWidth)
                        $.plot($thisFlot, dataset, options)
                        //$.plot('#flotA01', dataset, options)
                    })
                });


                let dataset = [
                   { data: lineData, color: "#00FF00" },
                ];
                // init flot
                $.plot($thisFlot, dataset, options)

                // 取得今天日期: yyyy/MM/dd
                function GetDate() {
                    let today = new Date();
                    let y = today.getFullYear()
                    let m = (today.getMonth() + 1) > 9 ? (today.getMonth() + 1) : '0' + (today.getMonth() + 1)
                    let d = today.getDate() > 9 ? today.getDate() : '0' + today.getDate()
                    let date = y + '/' + m + '/' + d;
                    return date
                }

                let today = GetDate()

                updateFlot(data)

                // 標準VSM update
                function updateFlot(data) {
                    if (data.length <= 0) {
                        return
                    }


                    let tempNow = lineData[lineData.length - 1][0]
                    if (Array.isArray(data)) {
                        for (let i = 0; i < data.length; i++) {
                            lineData.shift()
                            tempNow += updateInterval
                            lineData.push([tempNow, data[i]])
                        }
                    }

                    // 放60秒空資料 ( 每點1秒, 刻度間隔60秒 )
                    // 為了顯示ㄇ字形
                    //for (let i = 0; i < 60; i++) {
                    //    lineData.shift()
                    //    tempNow += updateInterval
                    //    lineData.push([tempNow, -1])
                    //}

                    // 用上面那個 如果資料數小於60個綠色線會被推出去看不到
                    // 塞一點空資料給最右邊一點空間
                    for (let i = 0; i < data.length/4; i++) {
                        lineData.shift()
                        tempNow += updateInterval
                        lineData.push([tempNow, -1])
                    }

                    // redraw flot
                    //$.plot("#flotA01", dataset, options)
                    let tmp = $.plot($thisFlot, dataset, options)

                    // 回收記憶體
                    // 這樣不行
                    //$container = null
                    //$row = null
                    //$thisFlot = null
                    //tmp = null
                }

            }

        })
    </script>
}
