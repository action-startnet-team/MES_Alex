@using MES_WATER.Models;
@using System.Reflection;
@using System.ComponentModel.DataAnnotations;
@using System.ComponentModel.DataAnnotations.Schema;

@*修改點 以下*@
@model MES_WATER.Models.EMT06_0000
@*修改點 以上*@

@{
    //主檔頁面
    ViewBag.Title = "Insert";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //公用函數庫
    Comm comm = new Comm();
    GetData GD = new GetData();
    DynamicTable DT = new DynamicTable();
    GetModelValidation gmv = new GetModelValidation();

    //公用變數
    string sPrgCode = ViewBag.prg_code;
    string key = gmv.GetKey<EMT06_0000>(new EMT06_0000());

    @*修改點 向下*@
EMT06_0000 obj = new EMT06_0000();


//取得畫面上下拉選單的選項值
List<DDLList> call_code_list = comm.Get_DDLOption("call_code", "A");
List<DDLList> dev_code_list = comm.Get_DDLOption("EMB07_0000", "dev_code", "dev_name");
List<DDLList> fault_code_list = comm.Get_DDLOption("EMB18_0000", "fault_code", "fault_name");
List<DDLList> per_code_list = comm.Get_DDLOption("EMB14_0000", "per_code", "per_name");
List<DDLList> fault_handle_code_list = comm.Get_DDLOption("EMB20_0000", "fault_handle_code", "fault_handle_name");

//自定義下拉選單的選項值

    @*修改點 向上*@
}

@section head_plugin {
    <link rel="stylesheet" href="~/Content/assets/css/chosen.min.css" />
    <link rel="stylesheet" href="~/Content/assets/css/bootstrap-multiselect.min.css" />
    <link rel="stylesheet" href="~/Content/assets/css/jquery-ui.custom.min.css" />
    <link rel="stylesheet" href="~/Content/assets/css/bootstrap-datepicker3.min.css" />

}

@Html.Partial("pPrgName")
<div class="row">
    <ul class="nav nav-tabs" id="myTab">
        <li class="active">
            <a data-toggle="tab" href="#home">
                <i class="green ace-icon fa fa-home bigger-120"></i>
                主檔
            </a>
        </li>
    </ul>
    <div class="tab-content">
        <div id="home" class="tab-pane fade in active">
            @using (Html.BeginForm("Insert", sPrgCode, FormMethod.Post, new { @class = "form-horizontal", id = "validation_form", role = "form" }))
            {
                <div id="errMsgSummary" class="alert alert-danger @( (ViewBag.showErrMsg ?? false ) ? "" : "hidden" )">
                    <button type="button" class="close" data-dismiss="alert">
                        <i class="ace-icon fa fa-times"></i>
                    </button>
                    <strong>
                        <i class="ace-icon fa fa-times"></i>
                        系統訊息!
                    </strong>
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    <br />
                </div>
                @*修改點 向下 輸入畫面編排*@
                <div class="row">
                    <div class="col-sm-offset-2 col-md-6 col-xs-12 ">
                        @*<div class="row">
                                <div class="col-sm-12">
                                    @CustomHelper.Get_Label(Model, sPrgCode, "rep_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                    <div class="col-md-8 col-xs-7">
                                        <div>
                                            @Html.EditorFor(model => model.rep_code, new { htmlAttributes = new { @class = " col-xs-12" } })
                                        </div>
                                        <div style="clear:both;"></div>
                                        @Html.ValidationMessageFor(model => model.rep_code, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <br />*@
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "rep_date", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.rep_date, new { htmlAttributes = new { @class = " col-xs-12" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.rep_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "call_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-sm-8 col-xs-5">
                                    <select class="chosen-select col-xs-12" id="call_code" name="call_code">
                                        @CustomHelper.Get_Option(call_code_list, Model.call_code, true)
                                    </select>
                                    @Html.ValidationMessageFor(model => model.call_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "dev_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-sm-8 col-xs-5">
                                    <select class="chosen-select col-xs-12" id="dev_code" name="dev_code" disabled>
                                        @CustomHelper.Get_Option(dev_code_list, Model.dev_code, true)
                                    </select>
                                    @Html.ValidationMessageFor(model => model.dev_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "fault_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-sm-8 col-xs-5">
                                    <select class="chosen-select col-xs-12" id="fault_code" name="fault_code">
                                        @CustomHelper.Get_Option(fault_code_list, Model.fault_code, true)
                                    </select>
                                    @Html.ValidationMessageFor(model => model.fault_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        @*<div class="row">
                                <div class="col-sm-12">
                                    @CustomHelper.Get_Label(Model, sPrgCode, "per_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                    <div class="col-sm-8 col-xs-5">
                                        <select class="chosen-select col-xs-12" id="per_code" name="per_code">
                                            @CustomHelper.Get_Option(per_code_list, Model.per_code, true)
                                        </select>
                                        @Html.ValidationMessageFor(model => model.per_code, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>*@
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "per_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.per_code, new { htmlAttributes = new { @class = " col-xs-12" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.per_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "per_tel", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.per_tel, new { htmlAttributes = new { @class = " col-xs-12" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.per_tel, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "per_mail", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-7">
                                    <div>
                                        @Html.EditorFor(model => model.per_mail, new { htmlAttributes = new { @class = " col-xs-12" } })
                                    </div>
                                    <div style="clear:both;"></div>
                                    @Html.ValidationMessageFor(model => model.per_mail, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "fault_handle_code", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-sm-8 col-xs-5">
                                    <select class="chosen-select col-xs-12" id="fault_handle_code" name="fault_handle_code">
                                        <option value="">--請選擇叫修單號--</option>
                                        @*@CustomHelper.Get_Option(fault_handle_code_list, Model.fault_handle_code, true)*@
                                    </select>
                                    @Html.ValidationMessageFor(model => model.fault_handle_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-12">
                                @CustomHelper.Get_Label(Model, sPrgCode, "rep_memo", htmlAttributes: new { @class = "col-sm-3 control-label no-padding-right" })
                                <div class="col-md-8 col-xs-6">
                                    <div class="clearfix">
                                        <textarea id="rep_memo" name="rep_memo" form="validation_form" class="autosize-transition form-control">@Model.rep_memo</textarea>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.rep_memo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @*修改點 向上 輸入畫面編排*@
                <br />
                <div class="clearfix">
                    <div class="col-md-offset-5 col-md-7">
                        <input type="submit" value="儲存" class="btn btn-white btn-info btn-bold" />
                        &nbsp;
                        <a class="btn btn-white btn-pink btn-round" href=@Url.Action("Index", sPrgCode)>
                            <i class="ace-icon fa fa-undo "></i>
                            返回
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section footer_plugin{
    <script src="~/Scripts/assets/js/wizard.min.js"></script>
    <script src="~/Scripts/assets/js/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/assets/js/jquery-additional-methods.min.js"></script>
    <script src="~/Scripts/assets/js/bootbox.js"></script>
    <script src="~/Scripts/assets/js/jquery.maskedinput.min.js"></script>
    <script src="~/Scripts/assets/js/select2.min.js"></script>
    <script src="~/Scripts/assets/js/chosen.jquery.min.js"></script>
    <script src="~/Scripts/assets/js/autosize.min.js"></script>

    <script src="~/Scripts/assets/js/bootstrap-datepicker.min.js"></script>
    <script src="~/Scripts/assets/js/bootstrap-datepicker.zh-TW.min.js"></script>
}
@section footer_script{
    <script type="text/javascript">
        jQuery(function ($) {
            @*修改點 向下 控制項輸入控制參考*@

            $("#call_code").change(function(){
                $.ajax({
                    method: "post",
                    url: '@Url.Action("CallCode_Change", sPrgCode)',
                    data: { call_code: function(){return $("#call_code").val();}},
                    success: function (k)
                    {
                        //var i = k.split(",")[0]
                        //var j = k.split(",")[1]
                        var i = k
                        $("#dev_code").val(i)
                        $('#dev_code').trigger("chosen:updated");
                        //$("#fault_code").val(j)
                        //$('#fault_code').trigger("chosen:updated");
                        $("#dev_code").change()
                    },
                    error: function () {alert("error");}
                })
            })


            $("#per_code").change(function(){
                $.ajax({
                    method: "post",
                    url: '@Url.Action("PerCode_Change", sPrgCode)',
                    data: { per_code: function(){return $("#per_code").val();}},
                    success: function (k)
                    {
                        var i = k.split(",")[0]
                        var j = k.split(",")[1]
                        $("#per_tel").val(i)
                        $('#per_tel').trigger("chosen:updated");
                        $("#per_mail").val(j)
                        $('#per_mail').trigger("chosen:updated");
                    },
                    error: function () {alert("error");}
                })
            })

            //$("#dev_code").change(function () {
            //    alert($(this).val())
            //    $.get("Get_FalutHandleCode?dev_code=" + $("#dev_code").val(), function (data) {
            //        alert(data)
            //        $('select[name="fault_handle_code"]').empty()
            //        if (data.length > 0) {
            //            for (let i = -1 ; i < data.length ; i++) {
            //                if(i>-1)
            //                {
            //                let FH = data[i].fault_handle_code + ' - ' + data[i].fault_handle_code
            //                let option = $('<option value="' + data[i].fault_handle_code + '">' + FH + '</option>')
            //                $('select[name=fault_handle_code]').append(option)
            //                }
            //                else{let option = "--請選擇--"}
            //            }
            //        } else {
            //            $('select[name=fault_handle_code]').append($('<option value="">沒有維修處置!</option>'))
            //        }
            //        $('select[name=fault_handle_code]').trigger("chosen:updated");

            //    });
            //})

            $(document).on('change', "#dev_code", function () {
                $('#fault_handle_code').empty();
                $.ajax({
                    method: "post",
                    async: false,
                    url: '@Url.Action("Get_FaultHandleCode", sPrgCode)',
                    data: {
                        dev_code: function () { return $('#dev_code').val(); },
                    },
                    success: function (data) {
                        if (data != "")
                        {
                            for (let i = 0; i < data.split(',').length; i++)
                            {
                                dat = data.split(',')[i]
                                d = dat.split('|')
                                $('#fault_handle_code').append('<option value = ' + d[0] + '>' + d[0] + " - " + d[1] + '</option>')
                            }
                        }
                        else
                        {
                            $('select[name=fault_handle_code]').append($('<option value="">沒有維修處置!</option>'))
                        }
                    }
                })
                $('#fault_handle_code').trigger("chosen:updated");
            })
            "001|QQ"


            // 日期的輸入控制
            $("input[name=rep_date]").datepicker({ language: 'zh-TW', format: "yyyy/mm/dd", autoclose: true }).attr('autocomplete', 'off');

            @*修改點 向上 控制項輸入控制參考*@


            $("input[name='@key']").change(function () {
                $.ajax({
                    method: "post",
                    url: '@Url.Action("Check_Data", sPrgCode)',
                    data: { @key: function() { return $("input[name='@key']").val(); } },
                    success: function (data) {
                        if (data.IsSuccess) {
                            let validator = $('#validation_form').validate();
                            validator.showErrors(data.ModelStateErrors)
                            $('form input:submit').attr('disabled', 'disabled');
                        }
                        else {
                            $('form input:submit').removeAttr('disabled')
                        }
                    },
                    error: function () {
                        alert("error");
                    }
                });
            })

            $("#validation_form").bind("invalid-form.validate", function () {
                $("#errMsgSummary").removeClass('hidden');
            });
            $('#validation_form').submit(function () {
                if ($(this).valid()) {
                    $('form input:submit').attr('disabled', 'disabled');
                    $('#dev_code').attr('disabled', 'disabled');
                } else {
                    $('form input:submit').removeAttr('disabled')
                    $('#dev_code').removeAttr('disabled')
                }
            });

            autosize($('textarea[class*=autosize]'));
            $(document).one('ajaxloadstart.page', function (e) {
                autosize.destroy('textarea[class*=autosize]')

                $('.limiterBox,.autosizejs').remove();
                $('.daterangepicker.dropdown-menu,.colorpicker.dropdown-menu,.bootstrap-datetimepicker-widget.dropdown-menu').remove();
            });

            if (!ace.vars['touch']) {
                $('.chosen-select').chosen({ allow_single_deselect: true });
                //resize the chosen on window resize

                $(window)
                .off('resize.chosen')
                .on('resize.chosen', function () {
                    $('.chosen-select').each(function () {
                        var $this = $(this);
                        $this.next().css({ 'width': $this.parent().width() });
                    })
                }).trigger('resize.chosen');
                //resize chosen on sidebar collapse/expand
                $(document).on('settings.ace.chosen', function (e, event_name, event_val) {
                    if (event_name != 'sidebar_collapsed') return;
                    $('.chosen-select').each(function () {
                        var $this = $(this);
                        $this.next().css({ 'width': $this.parent().width() });
                    })
                });

                $('#chosen-multiple-style .btn').on('click', function (e) {
                    var target = $(this).find('input[type=radio]');
                    var which = parseInt(target.val());
                    if (which == 2) $('#form-field-select-4').addClass('tag-input-style');
                    else $('#form-field-select-4').removeClass('tag-input-style');
                });
            }

        })
    </script>
}